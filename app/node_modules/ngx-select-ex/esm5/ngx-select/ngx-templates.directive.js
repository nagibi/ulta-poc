import { __decorate } from "tslib";
import { Directive, TemplateRef } from '@angular/core';
var NgxSelectOptionDirective = /** @class */ (function () {
    function NgxSelectOptionDirective(template) {
        this.template = template;
    }
    NgxSelectOptionDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    NgxSelectOptionDirective = __decorate([
        Directive({ selector: '[ngx-select-option]' })
    ], NgxSelectOptionDirective);
    return NgxSelectOptionDirective;
}());
export { NgxSelectOptionDirective };
var NgxSelectOptionSelectedDirective = /** @class */ (function () {
    function NgxSelectOptionSelectedDirective(template) {
        this.template = template;
    }
    NgxSelectOptionSelectedDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    NgxSelectOptionSelectedDirective = __decorate([
        Directive({ selector: '[ngx-select-option-selected]' })
    ], NgxSelectOptionSelectedDirective);
    return NgxSelectOptionSelectedDirective;
}());
export { NgxSelectOptionSelectedDirective };
var NgxSelectOptionNotFoundDirective = /** @class */ (function () {
    function NgxSelectOptionNotFoundDirective(template) {
        this.template = template;
    }
    NgxSelectOptionNotFoundDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
    NgxSelectOptionNotFoundDirective = __decorate([
        Directive({ selector: '[ngx-select-option-not-found]' })
    ], NgxSelectOptionNotFoundDirective);
    return NgxSelectOptionNotFoundDirective;
}());
export { NgxSelectOptionNotFoundDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LXRlbXBsYXRlcy5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZ3gtc2VsZWN0LWV4LyIsInNvdXJjZXMiOlsibmd4LXNlbGVjdC9uZ3gtdGVtcGxhdGVzLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFDLFNBQVMsRUFBRSxXQUFXLEVBQUMsTUFBTSxlQUFlLENBQUM7QUFHckQ7SUFDSSxrQ0FBbUIsUUFBMEI7UUFBMUIsYUFBUSxHQUFSLFFBQVEsQ0FBa0I7SUFDN0MsQ0FBQzs7Z0JBRDRCLFdBQVc7O0lBRC9CLHdCQUF3QjtRQURwQyxTQUFTLENBQUMsRUFBQyxRQUFRLEVBQUUscUJBQXFCLEVBQUMsQ0FBQztPQUNoQyx3QkFBd0IsQ0FHcEM7SUFBRCwrQkFBQztDQUFBLEFBSEQsSUFHQztTQUhZLHdCQUF3QjtBQU1yQztJQUNJLDBDQUFtQixRQUEwQjtRQUExQixhQUFRLEdBQVIsUUFBUSxDQUFrQjtJQUM3QyxDQUFDOztnQkFENEIsV0FBVzs7SUFEL0IsZ0NBQWdDO1FBRDVDLFNBQVMsQ0FBQyxFQUFDLFFBQVEsRUFBRSw4QkFBOEIsRUFBQyxDQUFDO09BQ3pDLGdDQUFnQyxDQUc1QztJQUFELHVDQUFDO0NBQUEsQUFIRCxJQUdDO1NBSFksZ0NBQWdDO0FBTTdDO0lBQ0ksMENBQW1CLFFBQTBCO1FBQTFCLGFBQVEsR0FBUixRQUFRLENBQWtCO0lBQzdDLENBQUM7O2dCQUQ0QixXQUFXOztJQUQvQixnQ0FBZ0M7UUFENUMsU0FBUyxDQUFDLEVBQUMsUUFBUSxFQUFFLCtCQUErQixFQUFDLENBQUM7T0FDMUMsZ0NBQWdDLENBRzVDO0lBQUQsdUNBQUM7Q0FBQSxBQUhELElBR0M7U0FIWSxnQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0RpcmVjdGl2ZSwgVGVtcGxhdGVSZWZ9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5ARGlyZWN0aXZlKHtzZWxlY3RvcjogJ1tuZ3gtc2VsZWN0LW9wdGlvbl0nfSlcbmV4cG9ydCBjbGFzcyBOZ3hTZWxlY3RPcHRpb25EaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pikge1xuICAgIH1cbn1cblxuQERpcmVjdGl2ZSh7c2VsZWN0b3I6ICdbbmd4LXNlbGVjdC1vcHRpb24tc2VsZWN0ZWRdJ30pXG5leHBvcnQgY2xhc3MgTmd4U2VsZWN0T3B0aW9uU2VsZWN0ZWREaXJlY3RpdmUge1xuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55Pikge1xuICAgIH1cbn1cblxuQERpcmVjdGl2ZSh7c2VsZWN0b3I6ICdbbmd4LXNlbGVjdC1vcHRpb24tbm90LWZvdW5kXSd9KVxuZXhwb3J0IGNsYXNzIE5neFNlbGVjdE9wdGlvbk5vdEZvdW5kRGlyZWN0aXZlIHtcbiAgICBjb25zdHJ1Y3RvcihwdWJsaWMgdGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT4pIHtcbiAgICB9XG59XG4iXX0=