{"version":3,"sources":["../../node_modules/tslib/tslib.es6.js","ng://ngx-select-ex/ngx-select/ngx-select.classes.ts","ng://ngx-select-ex/ngx-select/ngx-select.component.ts","ng://ngx-select-ex/ngx-select/ngx-templates.directive.ts","ng://ngx-select-ex/ngx-select/ngx-select.module.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","ENavigation","escapeString","escapeStringNs","NgxSelectOption","text","disabled","data","_parent","this","type","cacheRenderedText","prototype","renderText","sanitizer","highlightText","cacheHighlightText","bypassSecurityTrustHtml","replace","RegExp","NgxSelectOptGroup","label","options","filter","callbackFn","optionsFiltered","option","NgxSelectOptionDirective","template","TemplateRef","Directive","selector","NgxSelectOptionSelectedDirective","NgxSelectOptionNotFoundDirective","_","lodashNs","NGX_SELECT_OPTIONS","InjectionToken","propertyExists","obj","propertyName","NgxSelectComponent","iterableDiffers","cd","defaultOptions","cacheExternalValue","_this","optionValueField","optionTextField","optGroupLabelField","optGroupOptionsField","multiple","allowClear","placeholder","noAutoComplete","defaultValue","autoSelectSingleOption","autoClearSearch","noResultsFound","size","autoActiveOnMouseEnter","showOptionNotFoundForEmptyItems","isFocused","keepSelectMenuOpened","autocomplete","dropDownMenuOtherClasses","keyCodeToRemoveSelected","keyCodeToOptionsOpen","keyCodeToOptionsClose","keyCodeToOptionsSelect","keyCodeToNavigateFirst","keyCodeToNavigatePrevious","keyCodeToNavigateNext","keyCodeToNavigateLast","typed","EventEmitter","focus","blur","open","close","select","remove","navigated","selectionChanges","optionsOpened","actualValue","subjOptions","BehaviorSubject","subjSearchText","subjOptionsSelected","subjExternalValue","subjDefaultValue","subjRegisterOnChange","Subject","_focusToInput","onChange","v","onTouched","assign","itemsDiffer","find","create","defaultValueDiffer","subscribe","emit","subjActualValue","combineLatest","merge","pipe","map","concat","_a","_b","eVal","dVal","newVal","isEqual","distinctUntilChanged","x","y","share","flatMap","from","of","EMPTY","toArray","optionsFlat","optionsSelected","forEach","selectedOption","keepSelectedItems","optionValues_1","keptSelectedOptions","selOption","indexOf","apply","__spread","markForCheck","selectedOptions","search","filterOptions","highlightedText","highlightOption","subOption","cacheOptionsFilteredFlat","navigateOption","firstIfOptionActiveInvisible","optionsFilteredFlat","flatOptions","inputElRef","nativeElement","setFormControlSize","otherClassNames","useFormControl","formControlExtraClasses","form-control-sm input-sm","form-control-lg input-lg","setBtnSize","btn-sm","btn-lg","mainClicked","event","clickedSelectComponent","documentClick","optionsClose","detectChanges","tap","navigation","newActiveIdx","index","activeOption","filteredOptionList","first","previous","optionActive","last","firstSelected","idxOfOptionActive","newNavigated","optionActivate","ngDoCheck","diff","items","buildOptions","defVal","ngAfterContentChecked","checkInputVisibility","document","activeElement","choiceMenuElRef","element","querySelector","offsetHeight","ensureVisibleElement","ngOnDestroy","detach","canClearNotMultiple","focusToInput","inputKeyDown","keysForOpenedState","keysForClosedState","code","preventDefault","stopPropagation","optionSelect","optionsOpen","optionRemove","trackByOption","inputKeyUp","inputClick","sanitize","html","active","onMouseEnter","regExp","filterOption","searchCallback","test","subOp","cacheElementOffsetTop","offsetTop","container","scrollTop","clientHeight","showChoiceMenu","result","Array","isArray","item","optGroup_1","opt","buildOption","parent","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","IterableDiffers","DomSanitizer","ChangeDetectorRef","Inject","args","Optional","Input","Output","ViewChild","static","ContentChild","read","HostListener","NgxSelectComponent_1","Component","changeDetection","ChangeDetectionStrategy","OnPush","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NgxSelectModule","forRoot","ngModule","NgxSelectModule_1","useValue","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {INgxSelectOptGroup, INgxSelectOption, INgxSelectOptionBase, TNgxSelectOptionType} from './ngx-select.interfaces';\n\nconst escapeString = escapeStringNs;\n\nexport class NgxSelectOption implements INgxSelectOption, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'option';\n\n    highlightedText: SafeHtml;\n    active: boolean;\n\n    constructor(public value: number | string,\n                public text: string,\n                public disabled: boolean,\n                public data: any,\n                private _parent: NgxSelectOptGroup = null) {\n    }\n\n    public get parent(): NgxSelectOptGroup {\n        return this._parent;\n    }\n\n    private cacheHighlightText: string;\n    private cacheRenderedText: SafeHtml = null;\n\n    public renderText(sanitizer: DomSanitizer, highlightText: string): SafeHtml {\n        if (this.cacheHighlightText !== highlightText || this.cacheRenderedText === null) {\n            this.cacheHighlightText = highlightText;\n            if (this.cacheHighlightText) {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml((this.text + '').replace(\n                    new RegExp(escapeString(this.cacheHighlightText), 'gi'), '<strong>$&</strong>'\n                ));\n            } else {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml(this.text);\n            }\n        }\n        return this.cacheRenderedText;\n    }\n}\n\nexport class NgxSelectOptGroup implements INgxSelectOptGroup, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'optgroup';\n\n    public optionsFiltered: NgxSelectOption[];\n\n    constructor(public label: string,\n                public options: NgxSelectOption[] = []) {\n        this.filter(() => true);\n    }\n\n    public filter(callbackFn: (value: NgxSelectOption) => any): void {\n        this.optionsFiltered = this.options.filter((option: NgxSelectOption) => callbackFn(option));\n    }\n}\n\nexport type TSelectOption = NgxSelectOptGroup | NgxSelectOption;\n","import {\n    AfterContentChecked,\n    DoCheck,\n    Input,\n    Output,\n    ViewChild,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    IterableDiffer,\n    IterableDiffers,\n    ChangeDetectorRef,\n    ContentChild,\n    TemplateRef,\n    Optional,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    OnDestroy\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {Observable, Subject, BehaviorSubject, EMPTY, of, from, merge, combineLatest} from 'rxjs';\nimport {tap, filter, map, share, flatMap, toArray, distinctUntilChanged} from 'rxjs/operators';\nimport * as lodashNs from 'lodash';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {NgxSelectOptGroup, NgxSelectOption, TSelectOption} from './ngx-select.classes';\nimport {\n    NgxSelectOptionDirective,\n    NgxSelectOptionNotFoundDirective,\n    NgxSelectOptionSelectedDirective\n} from './ngx-templates.directive';\nimport {INgxOptionNavigated, INgxSelectOption, INgxSelectOptions} from './ngx-select.interfaces';\n\nconst _ = lodashNs;\nconst escapeString = escapeStringNs;\n\nexport const NGX_SELECT_OPTIONS = new InjectionToken<any>('NGX_SELECT_OPTIONS');\n\nexport interface INgxSelectComponentMouseEvent extends MouseEvent {\n    clickedSelectComponent?: NgxSelectComponent;\n}\n\nenum ENavigation {\n    first, previous, next, last,\n    firstSelected, firstIfOptionActiveInvisible\n}\n\nfunction propertyExists(obj: object, propertyName: string) {\n    return propertyName in obj;\n}\n\n@Component({\n    selector: 'ngx-select',\n    templateUrl: './ngx-select.component.html',\n    styleUrls: ['./ngx-select.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxSelectComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxSelectComponent implements INgxSelectOptions, ControlValueAccessor, DoCheck, AfterContentChecked, OnDestroy {\n    @Input() public items: any[];\n    @Input() public optionValueField = 'id';\n    @Input() public optionTextField = 'text';\n    @Input() public optGroupLabelField = 'label';\n    @Input() public optGroupOptionsField = 'options';\n    @Input() public multiple = false;\n    @Input() public allowClear = false;\n    @Input() public placeholder = '';\n    @Input() public noAutoComplete = false;\n    @Input() public disabled = false;\n    @Input() public defaultValue: any[] = [];\n    @Input() public autoSelectSingleOption = false;\n    @Input() public autoClearSearch = false;\n    @Input() public noResultsFound = 'No results found';\n    @Input() public keepSelectedItems: false;\n    @Input() public size: 'small' | 'default' | 'large' = 'default';\n    @Input() public searchCallback: (search: string, item: INgxSelectOption) => boolean;\n    @Input() public autoActiveOnMouseEnter = true;\n    @Input() public showOptionNotFoundForEmptyItems = false;\n    @Input() public isFocused = false;\n    @Input() public keepSelectMenuOpened = false;\n    @Input() public autocomplete = 'off';\n    @Input() public dropDownMenuOtherClasses = '';\n    public keyCodeToRemoveSelected = 'Delete';\n    public keyCodeToOptionsOpen = ['Enter', 'NumpadEnter'];\n    public keyCodeToOptionsClose = 'Escape';\n    public keyCodeToOptionsSelect = ['Enter', 'NumpadEnter'];\n    public keyCodeToNavigateFirst = 'ArrowLeft';\n    public keyCodeToNavigatePrevious = 'ArrowUp';\n    public keyCodeToNavigateNext = 'ArrowDown';\n    public keyCodeToNavigateLast = 'ArrowRight';\n\n    @Output() public typed = new EventEmitter<string>();\n    @Output() public focus = new EventEmitter<void>();\n    @Output() public blur = new EventEmitter<void>();\n    @Output() public open = new EventEmitter<void>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public select = new EventEmitter<any>();\n    @Output() public remove = new EventEmitter<any>();\n    @Output() public navigated = new EventEmitter<INgxOptionNavigated>();\n    @Output() public selectionChanges = new EventEmitter<INgxSelectOption[]>();\n\n    @ViewChild('main', {static: true}) protected mainElRef: ElementRef;\n    @ViewChild('input') public inputElRef: ElementRef;\n    @ViewChild('choiceMenu') protected choiceMenuElRef: ElementRef;\n\n    @ContentChild(NgxSelectOptionDirective, {read: TemplateRef, static: true}) templateOption: NgxSelectOptionDirective;\n\n    @ContentChild(NgxSelectOptionSelectedDirective, {read: TemplateRef, static: true})\n    templateSelectedOption: NgxSelectOptionSelectedDirective;\n\n    @ContentChild(NgxSelectOptionNotFoundDirective, {read: TemplateRef, static: true})\n    templateOptionNotFound: NgxSelectOptionNotFoundDirective;\n\n    public optionsOpened = false;\n    public optionsFiltered: TSelectOption[];\n\n    private optionActive: NgxSelectOption;\n    private itemsDiffer: IterableDiffer<any>;\n    private defaultValueDiffer: IterableDiffer<any[]>;\n    private actualValue: any[] = [];\n\n    public subjOptions = new BehaviorSubject<TSelectOption[]>([]);\n    private subjSearchText = new BehaviorSubject<string>('');\n\n    private subjOptionsSelected = new BehaviorSubject<NgxSelectOption[]>([]);\n    private subjExternalValue = new BehaviorSubject<any[]>([]);\n    private subjDefaultValue = new BehaviorSubject<any[]>([]);\n    private subjRegisterOnChange = new Subject();\n\n    private cacheOptionsFilteredFlat: NgxSelectOption[];\n    private cacheElementOffsetTop: number;\n\n    private _focusToInput = false;\n\n    /** @internal */\n    public get inputText() {\n        if (this.inputElRef && this.inputElRef.nativeElement) {\n            return this.inputElRef.nativeElement.value;\n        }\n        return '';\n    }\n\n    constructor(iterableDiffers: IterableDiffers, private sanitizer: DomSanitizer, private cd: ChangeDetectorRef,\n                @Inject(NGX_SELECT_OPTIONS) @Optional() defaultOptions: INgxSelectOptions) {\n        Object.assign(this, defaultOptions);\n\n        // DIFFERS\n        this.itemsDiffer = iterableDiffers.find([]).create<any>(null);\n        this.defaultValueDiffer = iterableDiffers.find([]).create<any>(null);\n\n        // OBSERVERS\n        this.typed.subscribe((text: string) => this.subjSearchText.next(text));\n        this.subjOptionsSelected.subscribe((options: NgxSelectOption[]) => this.selectionChanges.emit(options));\n        let cacheExternalValue: any[];\n\n        // Get actual value\n        const subjActualValue = combineLatest([\n            merge(\n                this.subjExternalValue.pipe(map(\n                    (v: any[]) => cacheExternalValue = v === null ? [] : [].concat(v)\n                )),\n                this.subjOptionsSelected.pipe(map(\n                    (options: NgxSelectOption[]) => options.map((o: NgxSelectOption) => o.value)\n                ))\n            ),\n            this.subjDefaultValue\n        ]).pipe(\n            map(([eVal, dVal]: [any[], any[]]) => {\n                const newVal = _.isEqual(eVal, dVal) ? [] : eVal;\n                return newVal.length ? newVal : dVal;\n            }),\n            distinctUntilChanged((x, y) => _.isEqual(x, y)),\n            share()\n        );\n\n        // Export actual value\n        combineLatest([subjActualValue, this.subjRegisterOnChange])\n            .pipe(map(([actualValue]: [any[], any[]]) => actualValue))\n            .subscribe((actualValue: any[]) => {\n                this.actualValue = actualValue;\n                if (!_.isEqual(actualValue, cacheExternalValue)) {\n                    cacheExternalValue = actualValue;\n                    if (this.multiple) {\n                        this.onChange(actualValue);\n                    } else {\n                        this.onChange(actualValue.length ? actualValue[0] : null);\n                    }\n                }\n            });\n\n        // Correct selected options when the options changed\n        combineLatest([\n            this.subjOptions.pipe(\n                flatMap((options: TSelectOption[]) => from(options).pipe(\n                    flatMap((option: TSelectOption) => option instanceof NgxSelectOption\n                        ? of(option)\n                        : (option instanceof NgxSelectOptGroup ? from(option.options) : EMPTY)\n                    ),\n                    toArray()\n                ))\n            ),\n            subjActualValue\n        ]).pipe(\n            map(([optionsFlat, actualValue]: [NgxSelectOption[], any[]]) => {\n                const optionsSelected = [];\n\n                actualValue.forEach((value: any) => {\n                    const selectedOption = optionsFlat.find((option: NgxSelectOption) => option.value === value);\n                    if (selectedOption) {\n                        optionsSelected.push(selectedOption);\n                    }\n                });\n\n                if (this.keepSelectedItems) {\n                    const optionValues = optionsSelected.map((option: NgxSelectOption) => option.value);\n                    const keptSelectedOptions = this.subjOptionsSelected.value\n                        .filter((selOption: NgxSelectOption) => optionValues.indexOf(selOption.value) === -1);\n                    optionsSelected.push(...keptSelectedOptions);\n                }\n\n                if (!_.isEqual(optionsSelected, this.subjOptionsSelected.value)) {\n                    this.subjOptionsSelected.next(optionsSelected);\n                    this.cd.markForCheck();\n                }\n\n            })\n        ).subscribe();\n\n        // Ensure working filter by a search text\n        combineLatest([this.subjOptions, this.subjOptionsSelected, this.subjSearchText]).pipe(\n            map(([options, selectedOptions, search]: [TSelectOption[], NgxSelectOption[], string]) => {\n                this.optionsFiltered = this.filterOptions(search, options, selectedOptions).map(option => {\n                    if (option instanceof NgxSelectOption) {\n                        option.highlightedText = this.highlightOption(option);\n                    } else if (option instanceof NgxSelectOptGroup) {\n                        option.options.map(subOption => {\n                            subOption.highlightedText = this.highlightOption(subOption);\n                            return subOption;\n                        });\n                    }\n                    return option;\n                });\n                this.cacheOptionsFilteredFlat = null;\n                this.navigateOption(ENavigation.firstIfOptionActiveInvisible);\n                this.cd.markForCheck();\n                return selectedOptions;\n            }),\n            flatMap((selectedOptions: NgxSelectOption[]) => this.optionsFilteredFlat().pipe(filter(\n                (flatOptions: NgxSelectOption[]) => this.autoSelectSingleOption && flatOptions.length === 1 && !selectedOptions.length\n            )))\n        ).subscribe((flatOptions: NgxSelectOption[]) => {\n            this.subjOptionsSelected.next(flatOptions);\n            this.cd.markForCheck();\n        });\n    }\n\n    public setFormControlSize(otherClassNames: object = {}, useFormControl: boolean = true) {\n        const formControlExtraClasses = useFormControl ? {\n            'form-control-sm input-sm': this.size === 'small',\n            'form-control-lg input-lg': this.size === 'large'\n        } : {};\n        return Object.assign(formControlExtraClasses, otherClassNames);\n    }\n\n    public setBtnSize() {\n        return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'};\n    }\n\n    public get optionsSelected(): NgxSelectOption[] {\n        return this.subjOptionsSelected.value;\n    }\n\n    public mainClicked(event: INgxSelectComponentMouseEvent) {\n        event.clickedSelectComponent = this;\n        if (!this.isFocused) {\n            this.isFocused = true;\n            this.focus.emit();\n        }\n    }\n\n    @HostListener('document:focusin', ['$event'])\n    @HostListener('document:click', ['$event'])\n    public documentClick(event: INgxSelectComponentMouseEvent) {\n        if (event.clickedSelectComponent !== this) {\n            if (this.optionsOpened) {\n                this.optionsClose();\n                this.cd.detectChanges(); // fix error because of delay between different events\n            }\n            if (this.isFocused) {\n                this.isFocused = false;\n                this.blur.emit();\n            }\n        }\n    }\n\n    private optionsFilteredFlat(): Observable<NgxSelectOption[]> {\n        if (this.cacheOptionsFilteredFlat) {\n            return of(this.cacheOptionsFilteredFlat);\n        }\n\n        return from(this.optionsFiltered).pipe(\n            flatMap<TSelectOption, any>((option: TSelectOption) =>\n                option instanceof NgxSelectOption ? of(option) :\n                    (option instanceof NgxSelectOptGroup ? from(option.optionsFiltered) : EMPTY)\n            ),\n            filter((optionsFilteredFlat: NgxSelectOption) => !optionsFilteredFlat.disabled),\n            toArray(),\n            tap((optionsFilteredFlat: NgxSelectOption[]) => this.cacheOptionsFilteredFlat = optionsFilteredFlat)\n        );\n    }\n\n    private navigateOption(navigation: ENavigation) {\n        this.optionsFilteredFlat().pipe(\n            map<NgxSelectOption[], INgxOptionNavigated>((options: NgxSelectOption[]) => {\n                const navigated: INgxOptionNavigated = {index: -1, activeOption: null, filteredOptionList: options};\n                let newActiveIdx;\n                switch (navigation) {\n                    case ENavigation.first:\n                        navigated.index = 0;\n                        break;\n                    case ENavigation.previous:\n                        newActiveIdx = options.indexOf(this.optionActive) - 1;\n                        navigated.index = newActiveIdx >= 0 ? newActiveIdx : options.length - 1;\n                        break;\n                    case ENavigation.next:\n                        newActiveIdx = options.indexOf(this.optionActive) + 1;\n                        navigated.index = newActiveIdx < options.length ? newActiveIdx : 0;\n                        break;\n                    case ENavigation.last:\n                        navigated.index = options.length - 1;\n                        break;\n                    case ENavigation.firstSelected:\n                        if (this.subjOptionsSelected.value.length) {\n                            navigated.index = options.indexOf(this.subjOptionsSelected.value[0]);\n                        }\n                        break;\n                    case ENavigation.firstIfOptionActiveInvisible:\n                        let idxOfOptionActive = -1;\n                        if (this.optionActive) {\n                            idxOfOptionActive = options.indexOf(options.find(x => x.value === this.optionActive.value));\n                        }\n                        navigated.index = idxOfOptionActive > 0 ? idxOfOptionActive : 0;\n                        break;\n                }\n                navigated.activeOption = options[navigated.index];\n                return navigated;\n            })\n        ).subscribe((newNavigated: INgxOptionNavigated) => this.optionActivate(newNavigated));\n    }\n\n    public ngDoCheck(): void {\n        if (this.itemsDiffer.diff(this.items)) {\n            this.subjOptions.next(this.buildOptions(this.items));\n        }\n\n        const defVal = this.defaultValue ? [].concat(this.defaultValue) : [];\n        if (this.defaultValueDiffer.diff(defVal)) {\n            this.subjDefaultValue.next(defVal);\n        }\n    }\n\n    public ngAfterContentChecked(): void {\n        if (this._focusToInput && this.checkInputVisibility() && this.inputElRef &&\n            this.inputElRef.nativeElement !== document.activeElement) {\n            this._focusToInput = false;\n            this.inputElRef.nativeElement.focus();\n        }\n\n        if (this.choiceMenuElRef) {\n            const ulElement = this.choiceMenuElRef.nativeElement as HTMLUListElement;\n            const element = ulElement.querySelector('a.ngx-select__item_active.active') as HTMLLinkElement;\n\n            if (element && element.offsetHeight > 0) {\n                this.ensureVisibleElement(element);\n            }\n\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.cd.detach();\n    }\n\n    public canClearNotMultiple(): boolean {\n        return this.allowClear && !!this.subjOptionsSelected.value.length &&\n            (!this.subjDefaultValue.value.length || this.subjDefaultValue.value[0] !== this.actualValue[0]);\n    }\n\n    public focusToInput(): void {\n        this._focusToInput = true;\n    }\n\n    public inputKeyDown(event: KeyboardEvent) {\n        const keysForOpenedState = [].concat(\n            this.keyCodeToOptionsSelect,\n            this.keyCodeToNavigateFirst,\n            this.keyCodeToNavigatePrevious,\n            this.keyCodeToNavigateNext,\n            this.keyCodeToNavigateLast\n        );\n        const keysForClosedState = [].concat(this.keyCodeToOptionsOpen, this.keyCodeToRemoveSelected);\n\n        if (this.optionsOpened && keysForOpenedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case ([].concat(this.keyCodeToOptionsSelect).indexOf(event.code) + 1) && event.code:\n                    this.optionSelect(this.optionActive);\n                    this.navigateOption(ENavigation.next);\n                    break;\n                case this.keyCodeToNavigateFirst:\n                    this.navigateOption(ENavigation.first);\n                    break;\n                case this.keyCodeToNavigatePrevious:\n                    this.navigateOption(ENavigation.previous);\n                    break;\n                case this.keyCodeToNavigateLast:\n                    this.navigateOption(ENavigation.last);\n                    break;\n                case this.keyCodeToNavigateNext:\n                    this.navigateOption(ENavigation.next);\n                    break;\n            }\n        } else if (!this.optionsOpened && keysForClosedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case ([].concat(this.keyCodeToOptionsOpen).indexOf(event.code) + 1) && event.code:\n                    this.optionsOpen();\n                    break;\n                case this.keyCodeToRemoveSelected:\n                    this.optionRemove(this.subjOptionsSelected.value[this.subjOptionsSelected.value.length - 1], event);\n                    break;\n            }\n        }\n    }\n\n    public trackByOption(index: number, option: TSelectOption) {\n        return option instanceof NgxSelectOption ? option.value :\n            (option instanceof NgxSelectOptGroup ? option.label : option);\n    }\n\n    public checkInputVisibility(): boolean {\n        return (this.multiple === true) || (this.optionsOpened && !this.noAutoComplete);\n    }\n\n    /** @internal */\n    public inputKeyUp(value: string = '', event: KeyboardEvent) {\n        if (event.code === this.keyCodeToOptionsClose) {\n            this.optionsClose(/*true*/);\n        } else if (this.optionsOpened && (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowDown'].indexOf(event.code) === -1)/*ignore arrows*/) {\n            this.typed.emit(value);\n        } else if (!this.optionsOpened && value) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public inputClick(value: string = '') {\n        if (!this.optionsOpened) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public sanitize(html: string): SafeHtml {\n        return html ? this.sanitizer.bypassSecurityTrustHtml(html) : null;\n    }\n\n    /** @internal */\n    public highlightOption(option: NgxSelectOption): SafeHtml {\n        if (this.inputElRef) {\n            return option.renderText(this.sanitizer, this.inputElRef.nativeElement.value);\n        }\n        return option.renderText(this.sanitizer, '');\n    }\n\n    /** @internal */\n    public optionSelect(option: NgxSelectOption, event: Event = null): void {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (option && !option.disabled) {\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).concat([option]));\n            this.select.emit(option.value);\n            if (!this.keepSelectMenuOpened) {\n                this.optionsClose(/*true*/);\n            }\n            this.onTouched();\n        }\n    }\n\n    /** @internal */\n    public optionRemove(option: NgxSelectOption, event: Event): void {\n        if (!this.disabled && option) {\n            event.stopPropagation();\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).filter(o => o !== option));\n            this.remove.emit(option.value);\n        }\n    }\n\n    /** @internal */\n    public optionActivate(navigated: INgxOptionNavigated): void {\n        if ((this.optionActive !== navigated.activeOption) &&\n            (!navigated.activeOption || !navigated.activeOption.disabled)) {\n            if (this.optionActive) {\n                this.optionActive.active = false;\n            }\n\n            this.optionActive = navigated.activeOption;\n\n            if (this.optionActive) {\n                this.optionActive.active = true;\n            }\n            this.navigated.emit(navigated);\n            this.cd.detectChanges();\n        }\n    }\n\n    /** @internal */\n    public onMouseEnter(navigated: INgxOptionNavigated): void {\n        if (this.autoActiveOnMouseEnter) {\n            this.optionActivate(navigated);\n        }\n    }\n\n    private filterOptions(search: string, options: TSelectOption[], selectedOptions: NgxSelectOption[]): TSelectOption[] {\n        const regExp = new RegExp(escapeString(search), 'i'),\n            filterOption = (option: NgxSelectOption) => {\n                if (this.searchCallback) {\n                    return this.searchCallback(search, option);\n                }\n                return (!search || regExp.test(option.text)) && (!this.multiple || selectedOptions.indexOf(option) === -1);\n            };\n\n        return options.filter((option: TSelectOption) => {\n            if (option instanceof NgxSelectOption) {\n                return filterOption(option as NgxSelectOption);\n            } else if (option instanceof NgxSelectOptGroup) {\n                const subOp = option as NgxSelectOptGroup;\n                subOp.filter((subOption: NgxSelectOption) => filterOption(subOption));\n                return subOp.optionsFiltered.length;\n            }\n        });\n    }\n\n    private ensureVisibleElement(element: HTMLElement) {\n        if (this.choiceMenuElRef && this.cacheElementOffsetTop !== element.offsetTop) {\n            this.cacheElementOffsetTop = element.offsetTop;\n            const container: HTMLElement = this.choiceMenuElRef.nativeElement;\n            if (this.cacheElementOffsetTop < container.scrollTop) {\n                container.scrollTop = this.cacheElementOffsetTop;\n            } else if (this.cacheElementOffsetTop + element.offsetHeight > container.scrollTop + container.clientHeight) {\n                container.scrollTop = this.cacheElementOffsetTop + element.offsetHeight - container.clientHeight;\n            }\n        }\n    }\n\n    public showChoiceMenu(): boolean {\n        return this.optionsOpened && (!!this.subjOptions.value.length || this.showOptionNotFoundForEmptyItems);\n    }\n\n    public optionsOpen(search: string = '') {\n        if (!this.disabled) {\n            this.optionsOpened = true;\n            this.subjSearchText.next(search);\n            if (!this.multiple && this.subjOptionsSelected.value.length) {\n                this.navigateOption(ENavigation.firstSelected);\n            } else {\n                this.navigateOption(ENavigation.first);\n            }\n            this.focusToInput();\n            this.open.emit();\n            this.cd.markForCheck();\n        }\n    }\n\n    public optionsClose(/*focusToHost: boolean = false*/) {\n        this.optionsOpened = false;\n        // if (focusToHost) {\n        //     const x = window.scrollX, y = window.scrollY;\n        //     this.mainElRef.nativeElement.focus();\n        //     window.scrollTo(x, y);\n        // }\n        this.close.emit();\n\n        if (this.autoClearSearch && this.multiple && this.inputElRef) {\n            this.inputElRef.nativeElement.value = null;\n        }\n    }\n\n    private buildOptions(data: any[]): Array<NgxSelectOption | NgxSelectOptGroup> {\n        const result: Array<NgxSelectOption | NgxSelectOptGroup> = [];\n        if (Array.isArray(data)) {\n            data.forEach((item: any) => {\n                const isOptGroup = typeof item === 'object' && item !== null &&\n                    propertyExists(item, this.optGroupLabelField) && propertyExists(item, this.optGroupOptionsField) &&\n                    Array.isArray(item[this.optGroupOptionsField]);\n                if (isOptGroup) {\n                    const optGroup = new NgxSelectOptGroup(item[this.optGroupLabelField]);\n                    item[this.optGroupOptionsField].forEach((subOption: NgxSelectOption) => {\n                        const opt = this.buildOption(subOption, optGroup);\n                        if (opt) {\n                            optGroup.options.push(opt);\n                        }\n                    });\n                    result.push(optGroup);\n                } else {\n                    const option = this.buildOption(item, null);\n                    if (option) {\n                        result.push(option);\n                    }\n                }\n            });\n        }\n        return result;\n    }\n\n    private buildOption(data: any, parent: NgxSelectOptGroup): NgxSelectOption {\n        let value, text, disabled;\n        if (typeof data === 'string' || typeof data === 'number') {\n            value = text = data;\n            disabled = false;\n        } else if (typeof data === 'object' && data !== null &&\n            (propertyExists(data, this.optionValueField) || propertyExists(data, this.optionTextField))) {\n            value = propertyExists(data, this.optionValueField) ? data[this.optionValueField] : data[this.optionTextField];\n            text = propertyExists(data, this.optionTextField) ? data[this.optionTextField] : data[this.optionValueField];\n            disabled = propertyExists(data, 'disabled') ? data['disabled'] : false;\n        } else {\n            return null;\n        }\n        return new NgxSelectOption(value, text, disabled, data, parent);\n    }\n\n    //////////// interface ControlValueAccessor ////////////\n    public onChange = (v: any) => v;\n\n    public onTouched: () => void = () => null;\n\n    public writeValue(obj: any): void {\n        this.subjExternalValue.next(obj);\n    }\n\n    public registerOnChange(fn: (_: any) => {}): void {\n        this.onChange = fn;\n        this.subjRegisterOnChange.next();\n    }\n\n    public registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.cd.markForCheck();\n    }\n}\n","import {Directive, TemplateRef} from '@angular/core';\n\n@Directive({selector: '[ngx-select-option]'})\nexport class NgxSelectOptionDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-selected]'})\nexport class NgxSelectOptionSelectedDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-not-found]'})\nexport class NgxSelectOptionNotFoundDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NGX_SELECT_OPTIONS, NgxSelectComponent} from './ngx-select.component';\nimport {NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective} from './ngx-templates.directive';\nimport {INgxSelectOptions} from './ngx-select.interfaces';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ],\n    exports: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ]\n})\nexport class NgxSelectModule {\n    static forRoot(options: INgxSelectOptions): ModuleWithProviders<NgxSelectModule> {\n        return {\n            ngModule: NgxSelectModule,\n            providers: [{provide: NGX_SELECT_OPTIONS, useValue: options}]\n        };\n    }\n}\n"]}