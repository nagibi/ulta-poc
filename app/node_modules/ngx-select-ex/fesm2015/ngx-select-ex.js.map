{"version":3,"file":"ngx-select-ex.js","sources":["ng://ngx-select-ex/ngx-select/ngx-select.classes.ts","ng://ngx-select-ex/ngx-select/ngx-templates.directive.ts","ng://ngx-select-ex/ngx-select/ngx-select.component.ts","ng://ngx-select-ex/ngx-select/ngx-select.module.ts","ng://ngx-select-ex/ngx-select-ex.ts"],"sourcesContent":["import {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {INgxSelectOptGroup, INgxSelectOption, INgxSelectOptionBase, TNgxSelectOptionType} from './ngx-select.interfaces';\n\nconst escapeString = escapeStringNs;\n\nexport class NgxSelectOption implements INgxSelectOption, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'option';\n\n    highlightedText: SafeHtml;\n    active: boolean;\n\n    constructor(public value: number | string,\n                public text: string,\n                public disabled: boolean,\n                public data: any,\n                private _parent: NgxSelectOptGroup = null) {\n    }\n\n    public get parent(): NgxSelectOptGroup {\n        return this._parent;\n    }\n\n    private cacheHighlightText: string;\n    private cacheRenderedText: SafeHtml = null;\n\n    public renderText(sanitizer: DomSanitizer, highlightText: string): SafeHtml {\n        if (this.cacheHighlightText !== highlightText || this.cacheRenderedText === null) {\n            this.cacheHighlightText = highlightText;\n            if (this.cacheHighlightText) {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml((this.text + '').replace(\n                    new RegExp(escapeString(this.cacheHighlightText), 'gi'), '<strong>$&</strong>'\n                ));\n            } else {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml(this.text);\n            }\n        }\n        return this.cacheRenderedText;\n    }\n}\n\nexport class NgxSelectOptGroup implements INgxSelectOptGroup, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'optgroup';\n\n    public optionsFiltered: NgxSelectOption[];\n\n    constructor(public label: string,\n                public options: NgxSelectOption[] = []) {\n        this.filter(() => true);\n    }\n\n    public filter(callbackFn: (value: NgxSelectOption) => any): void {\n        this.optionsFiltered = this.options.filter((option: NgxSelectOption) => callbackFn(option));\n    }\n}\n\nexport type TSelectOption = NgxSelectOptGroup | NgxSelectOption;\n","import {Directive, TemplateRef} from '@angular/core';\n\n@Directive({selector: '[ngx-select-option]'})\nexport class NgxSelectOptionDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-selected]'})\nexport class NgxSelectOptionSelectedDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-not-found]'})\nexport class NgxSelectOptionNotFoundDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n","import {\n    AfterContentChecked,\n    DoCheck,\n    Input,\n    Output,\n    ViewChild,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    IterableDiffer,\n    IterableDiffers,\n    ChangeDetectorRef,\n    ContentChild,\n    TemplateRef,\n    Optional,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    OnDestroy\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {Observable, Subject, BehaviorSubject, EMPTY, of, from, merge, combineLatest} from 'rxjs';\nimport {tap, filter, map, share, flatMap, toArray, distinctUntilChanged} from 'rxjs/operators';\nimport * as lodashNs from 'lodash';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {NgxSelectOptGroup, NgxSelectOption, TSelectOption} from './ngx-select.classes';\nimport {\n    NgxSelectOptionDirective,\n    NgxSelectOptionNotFoundDirective,\n    NgxSelectOptionSelectedDirective\n} from './ngx-templates.directive';\nimport {INgxOptionNavigated, INgxSelectOption, INgxSelectOptions} from './ngx-select.interfaces';\n\nconst _ = lodashNs;\nconst escapeString = escapeStringNs;\n\nexport const NGX_SELECT_OPTIONS = new InjectionToken<any>('NGX_SELECT_OPTIONS');\n\nexport interface INgxSelectComponentMouseEvent extends MouseEvent {\n    clickedSelectComponent?: NgxSelectComponent;\n}\n\nenum ENavigation {\n    first, previous, next, last,\n    firstSelected, firstIfOptionActiveInvisible\n}\n\nfunction propertyExists(obj: object, propertyName: string) {\n    return propertyName in obj;\n}\n\n@Component({\n    selector: 'ngx-select',\n    templateUrl: './ngx-select.component.html',\n    styleUrls: ['./ngx-select.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxSelectComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxSelectComponent implements INgxSelectOptions, ControlValueAccessor, DoCheck, AfterContentChecked, OnDestroy {\n    @Input() public items: any[];\n    @Input() public optionValueField = 'id';\n    @Input() public optionTextField = 'text';\n    @Input() public optGroupLabelField = 'label';\n    @Input() public optGroupOptionsField = 'options';\n    @Input() public multiple = false;\n    @Input() public allowClear = false;\n    @Input() public placeholder = '';\n    @Input() public noAutoComplete = false;\n    @Input() public disabled = false;\n    @Input() public defaultValue: any[] = [];\n    @Input() public autoSelectSingleOption = false;\n    @Input() public autoClearSearch = false;\n    @Input() public noResultsFound = 'No results found';\n    @Input() public keepSelectedItems: false;\n    @Input() public size: 'small' | 'default' | 'large' = 'default';\n    @Input() public searchCallback: (search: string, item: INgxSelectOption) => boolean;\n    @Input() public autoActiveOnMouseEnter = true;\n    @Input() public showOptionNotFoundForEmptyItems = false;\n    @Input() public isFocused = false;\n    @Input() public keepSelectMenuOpened = false;\n    @Input() public autocomplete = 'off';\n    @Input() public dropDownMenuOtherClasses = '';\n    public keyCodeToRemoveSelected = 'Delete';\n    public keyCodeToOptionsOpen = ['Enter', 'NumpadEnter'];\n    public keyCodeToOptionsClose = 'Escape';\n    public keyCodeToOptionsSelect = ['Enter', 'NumpadEnter'];\n    public keyCodeToNavigateFirst = 'ArrowLeft';\n    public keyCodeToNavigatePrevious = 'ArrowUp';\n    public keyCodeToNavigateNext = 'ArrowDown';\n    public keyCodeToNavigateLast = 'ArrowRight';\n\n    @Output() public typed = new EventEmitter<string>();\n    @Output() public focus = new EventEmitter<void>();\n    @Output() public blur = new EventEmitter<void>();\n    @Output() public open = new EventEmitter<void>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public select = new EventEmitter<any>();\n    @Output() public remove = new EventEmitter<any>();\n    @Output() public navigated = new EventEmitter<INgxOptionNavigated>();\n    @Output() public selectionChanges = new EventEmitter<INgxSelectOption[]>();\n\n    @ViewChild('main', {static: true}) protected mainElRef: ElementRef;\n    @ViewChild('input') public inputElRef: ElementRef;\n    @ViewChild('choiceMenu') protected choiceMenuElRef: ElementRef;\n\n    @ContentChild(NgxSelectOptionDirective, {read: TemplateRef, static: true}) templateOption: NgxSelectOptionDirective;\n\n    @ContentChild(NgxSelectOptionSelectedDirective, {read: TemplateRef, static: true})\n    templateSelectedOption: NgxSelectOptionSelectedDirective;\n\n    @ContentChild(NgxSelectOptionNotFoundDirective, {read: TemplateRef, static: true})\n    templateOptionNotFound: NgxSelectOptionNotFoundDirective;\n\n    public optionsOpened = false;\n    public optionsFiltered: TSelectOption[];\n\n    private optionActive: NgxSelectOption;\n    private itemsDiffer: IterableDiffer<any>;\n    private defaultValueDiffer: IterableDiffer<any[]>;\n    private actualValue: any[] = [];\n\n    public subjOptions = new BehaviorSubject<TSelectOption[]>([]);\n    private subjSearchText = new BehaviorSubject<string>('');\n\n    private subjOptionsSelected = new BehaviorSubject<NgxSelectOption[]>([]);\n    private subjExternalValue = new BehaviorSubject<any[]>([]);\n    private subjDefaultValue = new BehaviorSubject<any[]>([]);\n    private subjRegisterOnChange = new Subject();\n\n    private cacheOptionsFilteredFlat: NgxSelectOption[];\n    private cacheElementOffsetTop: number;\n\n    private _focusToInput = false;\n\n    /** @internal */\n    public get inputText() {\n        if (this.inputElRef && this.inputElRef.nativeElement) {\n            return this.inputElRef.nativeElement.value;\n        }\n        return '';\n    }\n\n    constructor(iterableDiffers: IterableDiffers, private sanitizer: DomSanitizer, private cd: ChangeDetectorRef,\n                @Inject(NGX_SELECT_OPTIONS) @Optional() defaultOptions: INgxSelectOptions) {\n        Object.assign(this, defaultOptions);\n\n        // DIFFERS\n        this.itemsDiffer = iterableDiffers.find([]).create<any>(null);\n        this.defaultValueDiffer = iterableDiffers.find([]).create<any>(null);\n\n        // OBSERVERS\n        this.typed.subscribe((text: string) => this.subjSearchText.next(text));\n        this.subjOptionsSelected.subscribe((options: NgxSelectOption[]) => this.selectionChanges.emit(options));\n        let cacheExternalValue: any[];\n\n        // Get actual value\n        const subjActualValue = combineLatest([\n            merge(\n                this.subjExternalValue.pipe(map(\n                    (v: any[]) => cacheExternalValue = v === null ? [] : [].concat(v)\n                )),\n                this.subjOptionsSelected.pipe(map(\n                    (options: NgxSelectOption[]) => options.map((o: NgxSelectOption) => o.value)\n                ))\n            ),\n            this.subjDefaultValue\n        ]).pipe(\n            map(([eVal, dVal]: [any[], any[]]) => {\n                const newVal = _.isEqual(eVal, dVal) ? [] : eVal;\n                return newVal.length ? newVal : dVal;\n            }),\n            distinctUntilChanged((x, y) => _.isEqual(x, y)),\n            share()\n        );\n\n        // Export actual value\n        combineLatest([subjActualValue, this.subjRegisterOnChange])\n            .pipe(map(([actualValue]: [any[], any[]]) => actualValue))\n            .subscribe((actualValue: any[]) => {\n                this.actualValue = actualValue;\n                if (!_.isEqual(actualValue, cacheExternalValue)) {\n                    cacheExternalValue = actualValue;\n                    if (this.multiple) {\n                        this.onChange(actualValue);\n                    } else {\n                        this.onChange(actualValue.length ? actualValue[0] : null);\n                    }\n                }\n            });\n\n        // Correct selected options when the options changed\n        combineLatest([\n            this.subjOptions.pipe(\n                flatMap((options: TSelectOption[]) => from(options).pipe(\n                    flatMap((option: TSelectOption) => option instanceof NgxSelectOption\n                        ? of(option)\n                        : (option instanceof NgxSelectOptGroup ? from(option.options) : EMPTY)\n                    ),\n                    toArray()\n                ))\n            ),\n            subjActualValue\n        ]).pipe(\n            map(([optionsFlat, actualValue]: [NgxSelectOption[], any[]]) => {\n                const optionsSelected = [];\n\n                actualValue.forEach((value: any) => {\n                    const selectedOption = optionsFlat.find((option: NgxSelectOption) => option.value === value);\n                    if (selectedOption) {\n                        optionsSelected.push(selectedOption);\n                    }\n                });\n\n                if (this.keepSelectedItems) {\n                    const optionValues = optionsSelected.map((option: NgxSelectOption) => option.value);\n                    const keptSelectedOptions = this.subjOptionsSelected.value\n                        .filter((selOption: NgxSelectOption) => optionValues.indexOf(selOption.value) === -1);\n                    optionsSelected.push(...keptSelectedOptions);\n                }\n\n                if (!_.isEqual(optionsSelected, this.subjOptionsSelected.value)) {\n                    this.subjOptionsSelected.next(optionsSelected);\n                    this.cd.markForCheck();\n                }\n\n            })\n        ).subscribe();\n\n        // Ensure working filter by a search text\n        combineLatest([this.subjOptions, this.subjOptionsSelected, this.subjSearchText]).pipe(\n            map(([options, selectedOptions, search]: [TSelectOption[], NgxSelectOption[], string]) => {\n                this.optionsFiltered = this.filterOptions(search, options, selectedOptions).map(option => {\n                    if (option instanceof NgxSelectOption) {\n                        option.highlightedText = this.highlightOption(option);\n                    } else if (option instanceof NgxSelectOptGroup) {\n                        option.options.map(subOption => {\n                            subOption.highlightedText = this.highlightOption(subOption);\n                            return subOption;\n                        });\n                    }\n                    return option;\n                });\n                this.cacheOptionsFilteredFlat = null;\n                this.navigateOption(ENavigation.firstIfOptionActiveInvisible);\n                this.cd.markForCheck();\n                return selectedOptions;\n            }),\n            flatMap((selectedOptions: NgxSelectOption[]) => this.optionsFilteredFlat().pipe(filter(\n                (flatOptions: NgxSelectOption[]) => this.autoSelectSingleOption && flatOptions.length === 1 && !selectedOptions.length\n            )))\n        ).subscribe((flatOptions: NgxSelectOption[]) => {\n            this.subjOptionsSelected.next(flatOptions);\n            this.cd.markForCheck();\n        });\n    }\n\n    public setFormControlSize(otherClassNames: object = {}, useFormControl: boolean = true) {\n        const formControlExtraClasses = useFormControl ? {\n            'form-control-sm input-sm': this.size === 'small',\n            'form-control-lg input-lg': this.size === 'large'\n        } : {};\n        return Object.assign(formControlExtraClasses, otherClassNames);\n    }\n\n    public setBtnSize() {\n        return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'};\n    }\n\n    public get optionsSelected(): NgxSelectOption[] {\n        return this.subjOptionsSelected.value;\n    }\n\n    public mainClicked(event: INgxSelectComponentMouseEvent) {\n        event.clickedSelectComponent = this;\n        if (!this.isFocused) {\n            this.isFocused = true;\n            this.focus.emit();\n        }\n    }\n\n    @HostListener('document:focusin', ['$event'])\n    @HostListener('document:click', ['$event'])\n    public documentClick(event: INgxSelectComponentMouseEvent) {\n        if (event.clickedSelectComponent !== this) {\n            if (this.optionsOpened) {\n                this.optionsClose();\n                this.cd.detectChanges(); // fix error because of delay between different events\n            }\n            if (this.isFocused) {\n                this.isFocused = false;\n                this.blur.emit();\n            }\n        }\n    }\n\n    private optionsFilteredFlat(): Observable<NgxSelectOption[]> {\n        if (this.cacheOptionsFilteredFlat) {\n            return of(this.cacheOptionsFilteredFlat);\n        }\n\n        return from(this.optionsFiltered).pipe(\n            flatMap<TSelectOption, any>((option: TSelectOption) =>\n                option instanceof NgxSelectOption ? of(option) :\n                    (option instanceof NgxSelectOptGroup ? from(option.optionsFiltered) : EMPTY)\n            ),\n            filter((optionsFilteredFlat: NgxSelectOption) => !optionsFilteredFlat.disabled),\n            toArray(),\n            tap((optionsFilteredFlat: NgxSelectOption[]) => this.cacheOptionsFilteredFlat = optionsFilteredFlat)\n        );\n    }\n\n    private navigateOption(navigation: ENavigation) {\n        this.optionsFilteredFlat().pipe(\n            map<NgxSelectOption[], INgxOptionNavigated>((options: NgxSelectOption[]) => {\n                const navigated: INgxOptionNavigated = {index: -1, activeOption: null, filteredOptionList: options};\n                let newActiveIdx;\n                switch (navigation) {\n                    case ENavigation.first:\n                        navigated.index = 0;\n                        break;\n                    case ENavigation.previous:\n                        newActiveIdx = options.indexOf(this.optionActive) - 1;\n                        navigated.index = newActiveIdx >= 0 ? newActiveIdx : options.length - 1;\n                        break;\n                    case ENavigation.next:\n                        newActiveIdx = options.indexOf(this.optionActive) + 1;\n                        navigated.index = newActiveIdx < options.length ? newActiveIdx : 0;\n                        break;\n                    case ENavigation.last:\n                        navigated.index = options.length - 1;\n                        break;\n                    case ENavigation.firstSelected:\n                        if (this.subjOptionsSelected.value.length) {\n                            navigated.index = options.indexOf(this.subjOptionsSelected.value[0]);\n                        }\n                        break;\n                    case ENavigation.firstIfOptionActiveInvisible:\n                        let idxOfOptionActive = -1;\n                        if (this.optionActive) {\n                            idxOfOptionActive = options.indexOf(options.find(x => x.value === this.optionActive.value));\n                        }\n                        navigated.index = idxOfOptionActive > 0 ? idxOfOptionActive : 0;\n                        break;\n                }\n                navigated.activeOption = options[navigated.index];\n                return navigated;\n            })\n        ).subscribe((newNavigated: INgxOptionNavigated) => this.optionActivate(newNavigated));\n    }\n\n    public ngDoCheck(): void {\n        if (this.itemsDiffer.diff(this.items)) {\n            this.subjOptions.next(this.buildOptions(this.items));\n        }\n\n        const defVal = this.defaultValue ? [].concat(this.defaultValue) : [];\n        if (this.defaultValueDiffer.diff(defVal)) {\n            this.subjDefaultValue.next(defVal);\n        }\n    }\n\n    public ngAfterContentChecked(): void {\n        if (this._focusToInput && this.checkInputVisibility() && this.inputElRef &&\n            this.inputElRef.nativeElement !== document.activeElement) {\n            this._focusToInput = false;\n            this.inputElRef.nativeElement.focus();\n        }\n\n        if (this.choiceMenuElRef) {\n            const ulElement = this.choiceMenuElRef.nativeElement as HTMLUListElement;\n            const element = ulElement.querySelector('a.ngx-select__item_active.active') as HTMLLinkElement;\n\n            if (element && element.offsetHeight > 0) {\n                this.ensureVisibleElement(element);\n            }\n\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.cd.detach();\n    }\n\n    public canClearNotMultiple(): boolean {\n        return this.allowClear && !!this.subjOptionsSelected.value.length &&\n            (!this.subjDefaultValue.value.length || this.subjDefaultValue.value[0] !== this.actualValue[0]);\n    }\n\n    public focusToInput(): void {\n        this._focusToInput = true;\n    }\n\n    public inputKeyDown(event: KeyboardEvent) {\n        const keysForOpenedState = [].concat(\n            this.keyCodeToOptionsSelect,\n            this.keyCodeToNavigateFirst,\n            this.keyCodeToNavigatePrevious,\n            this.keyCodeToNavigateNext,\n            this.keyCodeToNavigateLast\n        );\n        const keysForClosedState = [].concat(this.keyCodeToOptionsOpen, this.keyCodeToRemoveSelected);\n\n        if (this.optionsOpened && keysForOpenedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case ([].concat(this.keyCodeToOptionsSelect).indexOf(event.code) + 1) && event.code:\n                    this.optionSelect(this.optionActive);\n                    this.navigateOption(ENavigation.next);\n                    break;\n                case this.keyCodeToNavigateFirst:\n                    this.navigateOption(ENavigation.first);\n                    break;\n                case this.keyCodeToNavigatePrevious:\n                    this.navigateOption(ENavigation.previous);\n                    break;\n                case this.keyCodeToNavigateLast:\n                    this.navigateOption(ENavigation.last);\n                    break;\n                case this.keyCodeToNavigateNext:\n                    this.navigateOption(ENavigation.next);\n                    break;\n            }\n        } else if (!this.optionsOpened && keysForClosedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case ([].concat(this.keyCodeToOptionsOpen).indexOf(event.code) + 1) && event.code:\n                    this.optionsOpen();\n                    break;\n                case this.keyCodeToRemoveSelected:\n                    this.optionRemove(this.subjOptionsSelected.value[this.subjOptionsSelected.value.length - 1], event);\n                    break;\n            }\n        }\n    }\n\n    public trackByOption(index: number, option: TSelectOption) {\n        return option instanceof NgxSelectOption ? option.value :\n            (option instanceof NgxSelectOptGroup ? option.label : option);\n    }\n\n    public checkInputVisibility(): boolean {\n        return (this.multiple === true) || (this.optionsOpened && !this.noAutoComplete);\n    }\n\n    /** @internal */\n    public inputKeyUp(value: string = '', event: KeyboardEvent) {\n        if (event.code === this.keyCodeToOptionsClose) {\n            this.optionsClose(/*true*/);\n        } else if (this.optionsOpened && (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowDown'].indexOf(event.code) === -1)/*ignore arrows*/) {\n            this.typed.emit(value);\n        } else if (!this.optionsOpened && value) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public inputClick(value: string = '') {\n        if (!this.optionsOpened) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public sanitize(html: string): SafeHtml {\n        return html ? this.sanitizer.bypassSecurityTrustHtml(html) : null;\n    }\n\n    /** @internal */\n    public highlightOption(option: NgxSelectOption): SafeHtml {\n        if (this.inputElRef) {\n            return option.renderText(this.sanitizer, this.inputElRef.nativeElement.value);\n        }\n        return option.renderText(this.sanitizer, '');\n    }\n\n    /** @internal */\n    public optionSelect(option: NgxSelectOption, event: Event = null): void {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (option && !option.disabled) {\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).concat([option]));\n            this.select.emit(option.value);\n            if (!this.keepSelectMenuOpened) {\n                this.optionsClose(/*true*/);\n            }\n            this.onTouched();\n        }\n    }\n\n    /** @internal */\n    public optionRemove(option: NgxSelectOption, event: Event): void {\n        if (!this.disabled && option) {\n            event.stopPropagation();\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).filter(o => o !== option));\n            this.remove.emit(option.value);\n        }\n    }\n\n    /** @internal */\n    public optionActivate(navigated: INgxOptionNavigated): void {\n        if ((this.optionActive !== navigated.activeOption) &&\n            (!navigated.activeOption || !navigated.activeOption.disabled)) {\n            if (this.optionActive) {\n                this.optionActive.active = false;\n            }\n\n            this.optionActive = navigated.activeOption;\n\n            if (this.optionActive) {\n                this.optionActive.active = true;\n            }\n            this.navigated.emit(navigated);\n            this.cd.detectChanges();\n        }\n    }\n\n    /** @internal */\n    public onMouseEnter(navigated: INgxOptionNavigated): void {\n        if (this.autoActiveOnMouseEnter) {\n            this.optionActivate(navigated);\n        }\n    }\n\n    private filterOptions(search: string, options: TSelectOption[], selectedOptions: NgxSelectOption[]): TSelectOption[] {\n        const regExp = new RegExp(escapeString(search), 'i'),\n            filterOption = (option: NgxSelectOption) => {\n                if (this.searchCallback) {\n                    return this.searchCallback(search, option);\n                }\n                return (!search || regExp.test(option.text)) && (!this.multiple || selectedOptions.indexOf(option) === -1);\n            };\n\n        return options.filter((option: TSelectOption) => {\n            if (option instanceof NgxSelectOption) {\n                return filterOption(option as NgxSelectOption);\n            } else if (option instanceof NgxSelectOptGroup) {\n                const subOp = option as NgxSelectOptGroup;\n                subOp.filter((subOption: NgxSelectOption) => filterOption(subOption));\n                return subOp.optionsFiltered.length;\n            }\n        });\n    }\n\n    private ensureVisibleElement(element: HTMLElement) {\n        if (this.choiceMenuElRef && this.cacheElementOffsetTop !== element.offsetTop) {\n            this.cacheElementOffsetTop = element.offsetTop;\n            const container: HTMLElement = this.choiceMenuElRef.nativeElement;\n            if (this.cacheElementOffsetTop < container.scrollTop) {\n                container.scrollTop = this.cacheElementOffsetTop;\n            } else if (this.cacheElementOffsetTop + element.offsetHeight > container.scrollTop + container.clientHeight) {\n                container.scrollTop = this.cacheElementOffsetTop + element.offsetHeight - container.clientHeight;\n            }\n        }\n    }\n\n    public showChoiceMenu(): boolean {\n        return this.optionsOpened && (!!this.subjOptions.value.length || this.showOptionNotFoundForEmptyItems);\n    }\n\n    public optionsOpen(search: string = '') {\n        if (!this.disabled) {\n            this.optionsOpened = true;\n            this.subjSearchText.next(search);\n            if (!this.multiple && this.subjOptionsSelected.value.length) {\n                this.navigateOption(ENavigation.firstSelected);\n            } else {\n                this.navigateOption(ENavigation.first);\n            }\n            this.focusToInput();\n            this.open.emit();\n            this.cd.markForCheck();\n        }\n    }\n\n    public optionsClose(/*focusToHost: boolean = false*/) {\n        this.optionsOpened = false;\n        // if (focusToHost) {\n        //     const x = window.scrollX, y = window.scrollY;\n        //     this.mainElRef.nativeElement.focus();\n        //     window.scrollTo(x, y);\n        // }\n        this.close.emit();\n\n        if (this.autoClearSearch && this.multiple && this.inputElRef) {\n            this.inputElRef.nativeElement.value = null;\n        }\n    }\n\n    private buildOptions(data: any[]): Array<NgxSelectOption | NgxSelectOptGroup> {\n        const result: Array<NgxSelectOption | NgxSelectOptGroup> = [];\n        if (Array.isArray(data)) {\n            data.forEach((item: any) => {\n                const isOptGroup = typeof item === 'object' && item !== null &&\n                    propertyExists(item, this.optGroupLabelField) && propertyExists(item, this.optGroupOptionsField) &&\n                    Array.isArray(item[this.optGroupOptionsField]);\n                if (isOptGroup) {\n                    const optGroup = new NgxSelectOptGroup(item[this.optGroupLabelField]);\n                    item[this.optGroupOptionsField].forEach((subOption: NgxSelectOption) => {\n                        const opt = this.buildOption(subOption, optGroup);\n                        if (opt) {\n                            optGroup.options.push(opt);\n                        }\n                    });\n                    result.push(optGroup);\n                } else {\n                    const option = this.buildOption(item, null);\n                    if (option) {\n                        result.push(option);\n                    }\n                }\n            });\n        }\n        return result;\n    }\n\n    private buildOption(data: any, parent: NgxSelectOptGroup): NgxSelectOption {\n        let value, text, disabled;\n        if (typeof data === 'string' || typeof data === 'number') {\n            value = text = data;\n            disabled = false;\n        } else if (typeof data === 'object' && data !== null &&\n            (propertyExists(data, this.optionValueField) || propertyExists(data, this.optionTextField))) {\n            value = propertyExists(data, this.optionValueField) ? data[this.optionValueField] : data[this.optionTextField];\n            text = propertyExists(data, this.optionTextField) ? data[this.optionTextField] : data[this.optionValueField];\n            disabled = propertyExists(data, 'disabled') ? data['disabled'] : false;\n        } else {\n            return null;\n        }\n        return new NgxSelectOption(value, text, disabled, data, parent);\n    }\n\n    //////////// interface ControlValueAccessor ////////////\n    public onChange = (v: any) => v;\n\n    public onTouched: () => void = () => null;\n\n    public writeValue(obj: any): void {\n        this.subjExternalValue.next(obj);\n    }\n\n    public registerOnChange(fn: (_: any) => {}): void {\n        this.onChange = fn;\n        this.subjRegisterOnChange.next();\n    }\n\n    public registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.cd.markForCheck();\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NGX_SELECT_OPTIONS, NgxSelectComponent} from './ngx-select.component';\nimport {NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective} from './ngx-templates.directive';\nimport {INgxSelectOptions} from './ngx-select.interfaces';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ],\n    exports: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ]\n})\nexport class NgxSelectModule {\n    static forRoot(options: INgxSelectOptions): ModuleWithProviders<NgxSelectModule> {\n        return {\n            ngModule: NgxSelectModule,\n            providers: [{provide: NGX_SELECT_OPTIONS, useValue: options}]\n        };\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["escapeString"],"mappings":"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"}