{"version":3,"file":"ngx-select-ex.js","sources":["ng:/ngx-select-ex/ngx-select/ngx-select.classes.ts","ng:/ngx-select-ex/ngx-select/ngx-templates.directive.ts","ng:/ngx-select-ex/ngx-select/ngx-select.component.ts","ng:/ngx-select-ex/ngx-select/ngx-select.module.ts","ng:/ngx-select-ex/ngx-select-ex.ts"],"names":["escapeString"],"mappings":"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","sourcesContent":["import {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {INgxSelectOptGroup, INgxSelectOption, INgxSelectOptionBase, TNgxSelectOptionType} from './ngx-select.interfaces';\n\nconst escapeString = escapeStringNs;\n\nexport class NgxSelectOption implements INgxSelectOption, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'option';\n\n    highlightedText: SafeHtml;\n    active: boolean;\n\n    constructor(public value: number | string,\n                public text: string,\n                public disabled: boolean,\n                public data: any,\n                private _parent: NgxSelectOptGroup = null) {\n    }\n\n    public get parent(): NgxSelectOptGroup {\n        return this._parent;\n    }\n\n    private cacheHighlightText: string;\n    private cacheRenderedText: SafeHtml = null;\n\n    public renderText(sanitizer: DomSanitizer, highlightText: string): SafeHtml {\n        if (this.cacheHighlightText !== highlightText || this.cacheRenderedText === null) {\n            this.cacheHighlightText = highlightText;\n            if (this.cacheHighlightText) {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml((this.text + '').replace(\n                    new RegExp(escapeString(this.cacheHighlightText), 'gi'), '<strong>$&</strong>'\n                ));\n            } else {\n                this.cacheRenderedText = sanitizer.bypassSecurityTrustHtml(this.text);\n            }\n        }\n        return this.cacheRenderedText;\n    }\n}\n\nexport class NgxSelectOptGroup implements INgxSelectOptGroup, INgxSelectOptionBase {\n    readonly type: TNgxSelectOptionType = 'optgroup';\n\n    public optionsFiltered: NgxSelectOption[];\n\n    constructor(public label: string,\n                public options: NgxSelectOption[] = []) {\n        this.filter(() => true);\n    }\n\n    public filter(callbackFn: (value: NgxSelectOption) => any): void {\n        this.optionsFiltered = this.options.filter((option: NgxSelectOption) => callbackFn(option));\n    }\n}\n\nexport type TSelectOption = NgxSelectOptGroup | NgxSelectOption;\n","import {Directive, TemplateRef} from '@angular/core';\n\n@Directive({selector: '[ngx-select-option]'})\nexport class NgxSelectOptionDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-selected]'})\nexport class NgxSelectOptionSelectedDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n\n@Directive({selector: '[ngx-select-option-not-found]'})\nexport class NgxSelectOptionNotFoundDirective {\n    constructor(public template: TemplateRef<any>) {\n    }\n}\n","import {\n    AfterContentChecked,\n    DoCheck,\n    Input,\n    Output,\n    ViewChild,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    HostListener,\n    IterableDiffer,\n    IterableDiffers,\n    ChangeDetectorRef,\n    ContentChild,\n    TemplateRef,\n    Optional,\n    Inject,\n    InjectionToken,\n    ChangeDetectionStrategy,\n    OnDestroy\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\nimport {Observable, Subject, BehaviorSubject, EMPTY, of, from, merge, combineLatest} from 'rxjs';\nimport {tap, filter, map, share, flatMap, toArray, distinctUntilChanged} from 'rxjs/operators';\nimport * as lodashNs from 'lodash';\nimport * as escapeStringNs from 'escape-string-regexp';\nimport {NgxSelectOptGroup, NgxSelectOption, TSelectOption} from './ngx-select.classes';\nimport {\n    NgxSelectOptionDirective,\n    NgxSelectOptionNotFoundDirective,\n    NgxSelectOptionSelectedDirective\n} from './ngx-templates.directive';\nimport {INgxOptionNavigated, INgxSelectOption, INgxSelectOptions} from './ngx-select.interfaces';\n\nconst _ = lodashNs;\nconst escapeString = escapeStringNs;\n\nexport const NGX_SELECT_OPTIONS = new InjectionToken<any>('NGX_SELECT_OPTIONS');\n\nexport interface INgxSelectComponentMouseEvent extends MouseEvent {\n    clickedSelectComponent?: NgxSelectComponent;\n}\n\nenum ENavigation {\n    first, previous, next, last,\n    firstSelected, firstIfOptionActiveInvisible\n}\n\nfunction propertyExists(obj: object, propertyName: string) {\n    return propertyName in obj;\n}\n\n@Component({\n    selector: 'ngx-select',\n    templateUrl: './ngx-select.component.html',\n    styleUrls: ['./ngx-select.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxSelectComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxSelectComponent implements INgxSelectOptions, ControlValueAccessor, DoCheck, AfterContentChecked, OnDestroy {\n    @Input() public items: any[];\n    @Input() public optionValueField = 'id';\n    @Input() public optionTextField = 'text';\n    @Input() public optGroupLabelField = 'label';\n    @Input() public optGroupOptionsField = 'options';\n    @Input() public multiple = false;\n    @Input() public allowClear = false;\n    @Input() public placeholder = '';\n    @Input() public noAutoComplete = false;\n    @Input() public disabled = false;\n    @Input() public defaultValue: any[] = [];\n    @Input() public autoSelectSingleOption = false;\n    @Input() public autoClearSearch = false;\n    @Input() public noResultsFound = 'No results found';\n    @Input() public keepSelectedItems: false;\n    @Input() public size: 'small' | 'default' | 'large' = 'default';\n    @Input() public searchCallback: (search: string, item: INgxSelectOption) => boolean;\n    @Input() public autoActiveOnMouseEnter = true;\n    @Input() public showOptionNotFoundForEmptyItems = false;\n    @Input() public isFocused = false;\n    @Input() public keepSelectMenuOpened = false;\n    @Input() public autocomplete = 'off';\n    @Input() public dropDownMenuOtherClasses = '';\n    public keyCodeToRemoveSelected = 'Delete';\n    public keyCodeToOptionsOpen = ['Enter', 'NumpadEnter'];\n    public keyCodeToOptionsClose = 'Escape';\n    public keyCodeToOptionsSelect = ['Enter', 'NumpadEnter'];\n    public keyCodeToNavigateFirst = 'ArrowLeft';\n    public keyCodeToNavigatePrevious = 'ArrowUp';\n    public keyCodeToNavigateNext = 'ArrowDown';\n    public keyCodeToNavigateLast = 'ArrowRight';\n\n    @Output() public typed = new EventEmitter<string>();\n    @Output() public focus = new EventEmitter<void>();\n    @Output() public blur = new EventEmitter<void>();\n    @Output() public open = new EventEmitter<void>();\n    @Output() public close = new EventEmitter<void>();\n    @Output() public select = new EventEmitter<any>();\n    @Output() public remove = new EventEmitter<any>();\n    @Output() public navigated = new EventEmitter<INgxOptionNavigated>();\n    @Output() public selectionChanges = new EventEmitter<INgxSelectOption[]>();\n\n    @ViewChild('main', {static: true}) protected mainElRef: ElementRef;\n    @ViewChild('input') public inputElRef: ElementRef;\n    @ViewChild('choiceMenu') protected choiceMenuElRef: ElementRef;\n\n    @ContentChild(NgxSelectOptionDirective, {read: TemplateRef, static: true}) templateOption: NgxSelectOptionDirective;\n\n    @ContentChild(NgxSelectOptionSelectedDirective, {read: TemplateRef, static: true})\n    templateSelectedOption: NgxSelectOptionSelectedDirective;\n\n    @ContentChild(NgxSelectOptionNotFoundDirective, {read: TemplateRef, static: true})\n    templateOptionNotFound: NgxSelectOptionNotFoundDirective;\n\n    public optionsOpened = false;\n    public optionsFiltered: TSelectOption[];\n\n    private optionActive: NgxSelectOption;\n    private itemsDiffer: IterableDiffer<any>;\n    private defaultValueDiffer: IterableDiffer<any[]>;\n    private actualValue: any[] = [];\n\n    public subjOptions = new BehaviorSubject<TSelectOption[]>([]);\n    private subjSearchText = new BehaviorSubject<string>('');\n\n    private subjOptionsSelected = new BehaviorSubject<NgxSelectOption[]>([]);\n    private subjExternalValue = new BehaviorSubject<any[]>([]);\n    private subjDefaultValue = new BehaviorSubject<any[]>([]);\n    private subjRegisterOnChange = new Subject();\n\n    private cacheOptionsFilteredFlat: NgxSelectOption[];\n    private cacheElementOffsetTop: number;\n\n    private _focusToInput = false;\n\n    /** @internal */\n    public get inputText() {\n        if (this.inputElRef && this.inputElRef.nativeElement) {\n            return this.inputElRef.nativeElement.value;\n        }\n        return '';\n    }\n\n    constructor(iterableDiffers: IterableDiffers, private sanitizer: DomSanitizer, private cd: ChangeDetectorRef,\n                @Inject(NGX_SELECT_OPTIONS) @Optional() defaultOptions: INgxSelectOptions) {\n        Object.assign(this, defaultOptions);\n\n        // DIFFERS\n        this.itemsDiffer = iterableDiffers.find([]).create<any>(null);\n        this.defaultValueDiffer = iterableDiffers.find([]).create<any>(null);\n\n        // OBSERVERS\n        this.typed.subscribe((text: string) => this.subjSearchText.next(text));\n        this.subjOptionsSelected.subscribe((options: NgxSelectOption[]) => this.selectionChanges.emit(options));\n        let cacheExternalValue: any[];\n\n        // Get actual value\n        const subjActualValue = combineLatest([\n            merge(\n                this.subjExternalValue.pipe(map(\n                    (v: any[]) => cacheExternalValue = v === null ? [] : [].concat(v)\n                )),\n                this.subjOptionsSelected.pipe(map(\n                    (options: NgxSelectOption[]) => options.map((o: NgxSelectOption) => o.value)\n                ))\n            ),\n            this.subjDefaultValue\n        ]).pipe(\n            map(([eVal, dVal]: [any[], any[]]) => {\n                const newVal = _.isEqual(eVal, dVal) ? [] : eVal;\n                return newVal.length ? newVal : dVal;\n            }),\n            distinctUntilChanged((x, y) => _.isEqual(x, y)),\n            share()\n        );\n\n        // Export actual value\n        combineLatest([subjActualValue, this.subjRegisterOnChange])\n            .pipe(map(([actualValue]: [any[], any[]]) => actualValue))\n            .subscribe((actualValue: any[]) => {\n                this.actualValue = actualValue;\n                if (!_.isEqual(actualValue, cacheExternalValue)) {\n                    cacheExternalValue = actualValue;\n                    if (this.multiple) {\n                        this.onChange(actualValue);\n                    } else {\n                        this.onChange(actualValue.length ? actualValue[0] : null);\n                    }\n                }\n            });\n\n        // Correct selected options when the options changed\n        combineLatest([\n            this.subjOptions.pipe(\n                flatMap((options: TSelectOption[]) => from(options).pipe(\n                    flatMap((option: TSelectOption) => option instanceof NgxSelectOption\n                        ? of(option)\n                        : (option instanceof NgxSelectOptGroup ? from(option.options) : EMPTY)\n                    ),\n                    toArray()\n                ))\n            ),\n            subjActualValue\n        ]).pipe(\n            map(([optionsFlat, actualValue]: [NgxSelectOption[], any[]]) => {\n                const optionsSelected = [];\n\n                actualValue.forEach((value: any) => {\n                    const selectedOption = optionsFlat.find((option: NgxSelectOption) => option.value === value);\n                    if (selectedOption) {\n                        optionsSelected.push(selectedOption);\n                    }\n                });\n\n                if (this.keepSelectedItems) {\n                    const optionValues = optionsSelected.map((option: NgxSelectOption) => option.value);\n                    const keptSelectedOptions = this.subjOptionsSelected.value\n                        .filter((selOption: NgxSelectOption) => optionValues.indexOf(selOption.value) === -1);\n                    optionsSelected.push(...keptSelectedOptions);\n                }\n\n                if (!_.isEqual(optionsSelected, this.subjOptionsSelected.value)) {\n                    this.subjOptionsSelected.next(optionsSelected);\n                    this.cd.markForCheck();\n                }\n\n            })\n        ).subscribe();\n\n        // Ensure working filter by a search text\n        combineLatest([this.subjOptions, this.subjOptionsSelected, this.subjSearchText]).pipe(\n            map(([options, selectedOptions, search]: [TSelectOption[], NgxSelectOption[], string]) => {\n                this.optionsFiltered = this.filterOptions(search, options, selectedOptions).map(option => {\n                    if (option instanceof NgxSelectOption) {\n                        option.highlightedText = this.highlightOption(option);\n                    } else if (option instanceof NgxSelectOptGroup) {\n                        option.options.map(subOption => {\n                            subOption.highlightedText = this.highlightOption(subOption);\n                            return subOption;\n                        });\n                    }\n                    return option;\n                });\n                this.cacheOptionsFilteredFlat = null;\n                this.navigateOption(ENavigation.firstIfOptionActiveInvisible);\n                this.cd.markForCheck();\n                return selectedOptions;\n            }),\n            flatMap((selectedOptions: NgxSelectOption[]) => this.optionsFilteredFlat().pipe(filter(\n                (flatOptions: NgxSelectOption[]) => this.autoSelectSingleOption && flatOptions.length === 1 && !selectedOptions.length\n            )))\n        ).subscribe((flatOptions: NgxSelectOption[]) => {\n            this.subjOptionsSelected.next(flatOptions);\n            this.cd.markForCheck();\n        });\n    }\n\n    public setFormControlSize(otherClassNames: object = {}, useFormControl: boolean = true) {\n        const formControlExtraClasses = useFormControl ? {\n            'form-control-sm input-sm': this.size === 'small',\n            'form-control-lg input-lg': this.size === 'large'\n        } : {};\n        return Object.assign(formControlExtraClasses, otherClassNames);\n    }\n\n    public setBtnSize() {\n        return {'btn-sm': this.size === 'small', 'btn-lg': this.size === 'large'};\n    }\n\n    public get optionsSelected(): NgxSelectOption[] {\n        return this.subjOptionsSelected.value;\n    }\n\n    public mainClicked(event: INgxSelectComponentMouseEvent) {\n        event.clickedSelectComponent = this;\n        if (!this.isFocused) {\n            this.isFocused = true;\n            this.focus.emit();\n        }\n    }\n\n    @HostListener('document:focusin', ['$event'])\n    @HostListener('document:click', ['$event'])\n    public documentClick(event: INgxSelectComponentMouseEvent) {\n        if (event.clickedSelectComponent !== this) {\n            if (this.optionsOpened) {\n                this.optionsClose();\n                this.cd.detectChanges(); // fix error because of delay between different events\n            }\n            if (this.isFocused) {\n                this.isFocused = false;\n                this.blur.emit();\n            }\n        }\n    }\n\n    private optionsFilteredFlat(): Observable<NgxSelectOption[]> {\n        if (this.cacheOptionsFilteredFlat) {\n            return of(this.cacheOptionsFilteredFlat);\n        }\n\n        return from(this.optionsFiltered).pipe(\n            flatMap<TSelectOption, any>((option: TSelectOption) =>\n                option instanceof NgxSelectOption ? of(option) :\n                    (option instanceof NgxSelectOptGroup ? from(option.optionsFiltered) : EMPTY)\n            ),\n            filter((optionsFilteredFlat: NgxSelectOption) => !optionsFilteredFlat.disabled),\n            toArray(),\n            tap((optionsFilteredFlat: NgxSelectOption[]) => this.cacheOptionsFilteredFlat = optionsFilteredFlat)\n        );\n    }\n\n    private navigateOption(navigation: ENavigation) {\n        this.optionsFilteredFlat().pipe(\n            map<NgxSelectOption[], INgxOptionNavigated>((options: NgxSelectOption[]) => {\n                const navigated: INgxOptionNavigated = {index: -1, activeOption: null, filteredOptionList: options};\n                let newActiveIdx;\n                switch (navigation) {\n                    case ENavigation.first:\n                        navigated.index = 0;\n                        break;\n                    case ENavigation.previous:\n                        newActiveIdx = options.indexOf(this.optionActive) - 1;\n                        navigated.index = newActiveIdx >= 0 ? newActiveIdx : options.length - 1;\n                        break;\n                    case ENavigation.next:\n                        newActiveIdx = options.indexOf(this.optionActive) + 1;\n                        navigated.index = newActiveIdx < options.length ? newActiveIdx : 0;\n                        break;\n                    case ENavigation.last:\n                        navigated.index = options.length - 1;\n                        break;\n                    case ENavigation.firstSelected:\n                        if (this.subjOptionsSelected.value.length) {\n                            navigated.index = options.indexOf(this.subjOptionsSelected.value[0]);\n                        }\n                        break;\n                    case ENavigation.firstIfOptionActiveInvisible:\n                        let idxOfOptionActive = -1;\n                        if (this.optionActive) {\n                            idxOfOptionActive = options.indexOf(options.find(x => x.value === this.optionActive.value));\n                        }\n                        navigated.index = idxOfOptionActive > 0 ? idxOfOptionActive : 0;\n                        break;\n                }\n                navigated.activeOption = options[navigated.index];\n                return navigated;\n            })\n        ).subscribe((newNavigated: INgxOptionNavigated) => this.optionActivate(newNavigated));\n    }\n\n    public ngDoCheck(): void {\n        if (this.itemsDiffer.diff(this.items)) {\n            this.subjOptions.next(this.buildOptions(this.items));\n        }\n\n        const defVal = this.defaultValue ? [].concat(this.defaultValue) : [];\n        if (this.defaultValueDiffer.diff(defVal)) {\n            this.subjDefaultValue.next(defVal);\n        }\n    }\n\n    public ngAfterContentChecked(): void {\n        if (this._focusToInput && this.checkInputVisibility() && this.inputElRef &&\n            this.inputElRef.nativeElement !== document.activeElement) {\n            this._focusToInput = false;\n            this.inputElRef.nativeElement.focus();\n        }\n\n        if (this.choiceMenuElRef) {\n            const ulElement = this.choiceMenuElRef.nativeElement as HTMLUListElement;\n            const element = ulElement.querySelector('a.ngx-select__item_active.active') as HTMLLinkElement;\n\n            if (element && element.offsetHeight > 0) {\n                this.ensureVisibleElement(element);\n            }\n\n        }\n    }\n\n    public ngOnDestroy(): void {\n        this.cd.detach();\n    }\n\n    public canClearNotMultiple(): boolean {\n        return this.allowClear && !!this.subjOptionsSelected.value.length &&\n            (!this.subjDefaultValue.value.length || this.subjDefaultValue.value[0] !== this.actualValue[0]);\n    }\n\n    public focusToInput(): void {\n        this._focusToInput = true;\n    }\n\n    public inputKeyDown(event: KeyboardEvent) {\n        const keysForOpenedState = [].concat(\n            this.keyCodeToOptionsSelect,\n            this.keyCodeToNavigateFirst,\n            this.keyCodeToNavigatePrevious,\n            this.keyCodeToNavigateNext,\n            this.keyCodeToNavigateLast\n        );\n        const keysForClosedState = [].concat(this.keyCodeToOptionsOpen, this.keyCodeToRemoveSelected);\n\n        if (this.optionsOpened && keysForOpenedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case ([].concat(this.keyCodeToOptionsSelect).indexOf(event.code) + 1) && event.code:\n                    this.optionSelect(this.optionActive);\n                    this.navigateOption(ENavigation.next);\n                    break;\n                case this.keyCodeToNavigateFirst:\n                    this.navigateOption(ENavigation.first);\n                    break;\n                case this.keyCodeToNavigatePrevious:\n                    this.navigateOption(ENavigation.previous);\n                    break;\n                case this.keyCodeToNavigateLast:\n                    this.navigateOption(ENavigation.last);\n                    break;\n                case this.keyCodeToNavigateNext:\n                    this.navigateOption(ENavigation.next);\n                    break;\n            }\n        } else if (!this.optionsOpened && keysForClosedState.indexOf(event.code) !== -1) {\n            event.preventDefault();\n            event.stopPropagation();\n            switch (event.code) {\n                case ([].concat(this.keyCodeToOptionsOpen).indexOf(event.code) + 1) && event.code:\n                    this.optionsOpen();\n                    break;\n                case this.keyCodeToRemoveSelected:\n                    this.optionRemove(this.subjOptionsSelected.value[this.subjOptionsSelected.value.length - 1], event);\n                    break;\n            }\n        }\n    }\n\n    public trackByOption(index: number, option: TSelectOption) {\n        return option instanceof NgxSelectOption ? option.value :\n            (option instanceof NgxSelectOptGroup ? option.label : option);\n    }\n\n    public checkInputVisibility(): boolean {\n        return (this.multiple === true) || (this.optionsOpened && !this.noAutoComplete);\n    }\n\n    /** @internal */\n    public inputKeyUp(value: string = '', event: KeyboardEvent) {\n        if (event.code === this.keyCodeToOptionsClose) {\n            this.optionsClose(/*true*/);\n        } else if (this.optionsOpened && (['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowDown'].indexOf(event.code) === -1)/*ignore arrows*/) {\n            this.typed.emit(value);\n        } else if (!this.optionsOpened && value) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public inputClick(value: string = '') {\n        if (!this.optionsOpened) {\n            this.optionsOpen(value);\n        }\n    }\n\n    /** @internal */\n    public sanitize(html: string): SafeHtml {\n        return html ? this.sanitizer.bypassSecurityTrustHtml(html) : null;\n    }\n\n    /** @internal */\n    public highlightOption(option: NgxSelectOption): SafeHtml {\n        if (this.inputElRef) {\n            return option.renderText(this.sanitizer, this.inputElRef.nativeElement.value);\n        }\n        return option.renderText(this.sanitizer, '');\n    }\n\n    /** @internal */\n    public optionSelect(option: NgxSelectOption, event: Event = null): void {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        if (option && !option.disabled) {\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).concat([option]));\n            this.select.emit(option.value);\n            if (!this.keepSelectMenuOpened) {\n                this.optionsClose(/*true*/);\n            }\n            this.onTouched();\n        }\n    }\n\n    /** @internal */\n    public optionRemove(option: NgxSelectOption, event: Event): void {\n        if (!this.disabled && option) {\n            event.stopPropagation();\n            this.subjOptionsSelected.next((this.multiple ? this.subjOptionsSelected.value : []).filter(o => o !== option));\n            this.remove.emit(option.value);\n        }\n    }\n\n    /** @internal */\n    public optionActivate(navigated: INgxOptionNavigated): void {\n        if ((this.optionActive !== navigated.activeOption) &&\n            (!navigated.activeOption || !navigated.activeOption.disabled)) {\n            if (this.optionActive) {\n                this.optionActive.active = false;\n            }\n\n            this.optionActive = navigated.activeOption;\n\n            if (this.optionActive) {\n                this.optionActive.active = true;\n            }\n            this.navigated.emit(navigated);\n            this.cd.detectChanges();\n        }\n    }\n\n    /** @internal */\n    public onMouseEnter(navigated: INgxOptionNavigated): void {\n        if (this.autoActiveOnMouseEnter) {\n            this.optionActivate(navigated);\n        }\n    }\n\n    private filterOptions(search: string, options: TSelectOption[], selectedOptions: NgxSelectOption[]): TSelectOption[] {\n        const regExp = new RegExp(escapeString(search), 'i'),\n            filterOption = (option: NgxSelectOption) => {\n                if (this.searchCallback) {\n                    return this.searchCallback(search, option);\n                }\n                return (!search || regExp.test(option.text)) && (!this.multiple || selectedOptions.indexOf(option) === -1);\n            };\n\n        return options.filter((option: TSelectOption) => {\n            if (option instanceof NgxSelectOption) {\n                return filterOption(option as NgxSelectOption);\n            } else if (option instanceof NgxSelectOptGroup) {\n                const subOp = option as NgxSelectOptGroup;\n                subOp.filter((subOption: NgxSelectOption) => filterOption(subOption));\n                return subOp.optionsFiltered.length;\n            }\n        });\n    }\n\n    private ensureVisibleElement(element: HTMLElement) {\n        if (this.choiceMenuElRef && this.cacheElementOffsetTop !== element.offsetTop) {\n            this.cacheElementOffsetTop = element.offsetTop;\n            const container: HTMLElement = this.choiceMenuElRef.nativeElement;\n            if (this.cacheElementOffsetTop < container.scrollTop) {\n                container.scrollTop = this.cacheElementOffsetTop;\n            } else if (this.cacheElementOffsetTop + element.offsetHeight > container.scrollTop + container.clientHeight) {\n                container.scrollTop = this.cacheElementOffsetTop + element.offsetHeight - container.clientHeight;\n            }\n        }\n    }\n\n    public showChoiceMenu(): boolean {\n        return this.optionsOpened && (!!this.subjOptions.value.length || this.showOptionNotFoundForEmptyItems);\n    }\n\n    public optionsOpen(search: string = '') {\n        if (!this.disabled) {\n            this.optionsOpened = true;\n            this.subjSearchText.next(search);\n            if (!this.multiple && this.subjOptionsSelected.value.length) {\n                this.navigateOption(ENavigation.firstSelected);\n            } else {\n                this.navigateOption(ENavigation.first);\n            }\n            this.focusToInput();\n            this.open.emit();\n            this.cd.markForCheck();\n        }\n    }\n\n    public optionsClose(/*focusToHost: boolean = false*/) {\n        this.optionsOpened = false;\n        // if (focusToHost) {\n        //     const x = window.scrollX, y = window.scrollY;\n        //     this.mainElRef.nativeElement.focus();\n        //     window.scrollTo(x, y);\n        // }\n        this.close.emit();\n\n        if (this.autoClearSearch && this.multiple && this.inputElRef) {\n            this.inputElRef.nativeElement.value = null;\n        }\n    }\n\n    private buildOptions(data: any[]): Array<NgxSelectOption | NgxSelectOptGroup> {\n        const result: Array<NgxSelectOption | NgxSelectOptGroup> = [];\n        if (Array.isArray(data)) {\n            data.forEach((item: any) => {\n                const isOptGroup = typeof item === 'object' && item !== null &&\n                    propertyExists(item, this.optGroupLabelField) && propertyExists(item, this.optGroupOptionsField) &&\n                    Array.isArray(item[this.optGroupOptionsField]);\n                if (isOptGroup) {\n                    const optGroup = new NgxSelectOptGroup(item[this.optGroupLabelField]);\n                    item[this.optGroupOptionsField].forEach((subOption: NgxSelectOption) => {\n                        const opt = this.buildOption(subOption, optGroup);\n                        if (opt) {\n                            optGroup.options.push(opt);\n                        }\n                    });\n                    result.push(optGroup);\n                } else {\n                    const option = this.buildOption(item, null);\n                    if (option) {\n                        result.push(option);\n                    }\n                }\n            });\n        }\n        return result;\n    }\n\n    private buildOption(data: any, parent: NgxSelectOptGroup): NgxSelectOption {\n        let value, text, disabled;\n        if (typeof data === 'string' || typeof data === 'number') {\n            value = text = data;\n            disabled = false;\n        } else if (typeof data === 'object' && data !== null &&\n            (propertyExists(data, this.optionValueField) || propertyExists(data, this.optionTextField))) {\n            value = propertyExists(data, this.optionValueField) ? data[this.optionValueField] : data[this.optionTextField];\n            text = propertyExists(data, this.optionTextField) ? data[this.optionTextField] : data[this.optionValueField];\n            disabled = propertyExists(data, 'disabled') ? data['disabled'] : false;\n        } else {\n            return null;\n        }\n        return new NgxSelectOption(value, text, disabled, data, parent);\n    }\n\n    //////////// interface ControlValueAccessor ////////////\n    public onChange = (v: any) => v;\n\n    public onTouched: () => void = () => null;\n\n    public writeValue(obj: any): void {\n        this.subjExternalValue.next(obj);\n    }\n\n    public registerOnChange(fn: (_: any) => {}): void {\n        this.onChange = fn;\n        this.subjRegisterOnChange.next();\n    }\n\n    public registerOnTouched(fn: () => {}): void {\n        this.onTouched = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.disabled = isDisabled;\n        this.cd.markForCheck();\n    }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NGX_SELECT_OPTIONS, NgxSelectComponent} from './ngx-select.component';\nimport {NgxSelectOptionDirective, NgxSelectOptionNotFoundDirective, NgxSelectOptionSelectedDirective} from './ngx-templates.directive';\nimport {INgxSelectOptions} from './ngx-select.interfaces';\n\n@NgModule({\n    imports: [\n        CommonModule\n    ],\n    declarations: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ],\n    exports: [NgxSelectComponent,\n        NgxSelectOptionDirective, NgxSelectOptionSelectedDirective, NgxSelectOptionNotFoundDirective\n    ]\n})\nexport class NgxSelectModule {\n    static forRoot(options: INgxSelectOptions): ModuleWithProviders<NgxSelectModule> {\n        return {\n            ngModule: NgxSelectModule,\n            providers: [{provide: NGX_SELECT_OPTIONS, useValue: options}]\n        };\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}