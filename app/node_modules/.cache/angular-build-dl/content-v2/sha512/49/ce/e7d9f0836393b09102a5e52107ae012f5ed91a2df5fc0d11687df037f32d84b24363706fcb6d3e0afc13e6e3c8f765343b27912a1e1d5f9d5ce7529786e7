{"version":3,"sources":["./src/app/pages/auth/auth.module.ts","./src/app/pages/auth/auth.routing.module.ts","./src/app/pages/auth/components/recuperar-senha/recuperar-senha.component.ts","./src/app/pages/auth/components/recuperar-senha/recuperar-senha.component.html","./src/app/pages/auth/components/registrar/registrar.component.ts","./src/app/pages/auth/components/registrar/registrar.component.html"],"names":[],"mappings":"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","file":"pages-auth-auth-routing-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthComponent } from './auth.component';\nimport { CoreModule } from 'src/app/core/core.module';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { LoginComponent } from './components/login/login.component';\nimport { RecuperarSenhaComponent } from './components/recuperar-senha/recuperar-senha.component';\nimport { RegistrarComponent } from './components/registrar/registrar.component';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgxSelectModule } from 'ngx-select-ex';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxSelectModule, \n    TranslateModule.forChild(),\n  ],\n  declarations: [\n    AuthComponent,\n    LoginComponent,\n    RecuperarSenhaComponent,\n    RegistrarComponent,\n  ],\n  providers: [\n    \n  ],\n})\nexport class AuthModule {}\n","import { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './components/login/login.component';\nimport { RecuperarSenhaComponent } from './components/recuperar-senha/recuperar-senha.component';\nimport { RegistrarComponent } from './components/registrar/registrar.component';\nimport { AuthModule } from './auth.module';\nimport { NgModule } from '@angular/core';\nimport { AuthComponent } from './auth.component';\n\nconst ROUTES: Routes = [\n  {\n    path: '',\n    component: AuthComponent,\n    children: [\n      {\n        path:'',\n        redirectTo: 'login',\n        pathMatch:'full'\n      },\n      {\n        path: 'login',\n        canActivate: [],\n        component: LoginComponent,\n        data: {\n          title: 'Login',\n        },\n      },\n      {\n        path: 'recuperar-senha',\n        canActivate: [],\n        component: RecuperarSenhaComponent,\n        data: {\n          title: 'Recuperar Senha',\n        },\n      },\n      {\n        path: 'registrar',\n        canActivate: [],\n        component: RegistrarComponent,\n        data: {\n          title: 'Registrar',\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [\n    AuthModule, \n    RouterModule.forChild(ROUTES)],\n  exports: [\n    RouterModule\n  ],\n})\nexport class AuthRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ToastService } from 'src/app/core/services/toast.service';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AlertService } from 'src/app/core/services/alert.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { FormBaseComponent } from 'src/app/core/components/form-base/form-base.component';\nimport { AdminComponent } from 'src/app/pages/admin/admin.component';\nimport { LoginComponent } from '../login/login.component';\nimport { MessageService } from 'src/app/core/services/message.service';\nimport { Erro } from 'src/app/core/models/erro.model';\n\n@Component({\n  selector: 'app-recuperar-senha',\n  templateUrl: './recuperar-senha.component.html',\n  styleUrls: ['./recuperar-senha.component.css'],\n})\nexport class RecuperarSenhaComponent extends FormBaseComponent\n  implements OnInit {\n  public static ROTA: string = '/auth/recuperar-senha';\n  public isLoader:boolean=false;\n\n  constructor(\n    protected fb: FormBuilder,\n    protected translateService: TranslateService,\n    protected toastService: ToastService,\n    protected authService: AuthService,\n    protected router: Router,\n    protected activeRoute: ActivatedRoute,\n    protected alertService: AlertService,\n    protected messageService: MessageService,\n    protected modalService: NgbModal\n  ) {\n    super(fb, router, translateService, messageService, modalService);\n\n    if (this.authService.usuarioLogadoValue) {\n      this.router.navigate([AdminComponent.ROTA]);\n    }\n  }\n\n  ngOnInit() {\n    this.msgsError = [];\n\n    this.criarForm();\n  }\n\n  validar(): boolean {\n    var controls = this.form.controls;\n\n    if (this.form.invalid) {\n      Object.keys(controls).forEach((controlName) => {\n        controls[controlName].markAsTouched();\n      });\n\n      this.messageService.create('MSG000034');\n\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  criarForm() {\n    this.form = this.fb.group({\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n    });\n  }\n\n  submit() {\n\n    if (this.validar()) {\n      const dadosForm = this.form.value;\n      const email = dadosForm.email;\n      \n      this.isLoader = true;\n      this.authService.recuperarSenha(email).subscribe(\n        (resp) => {\n          if (resp) {\n            this.messageService.create(resp.message);\n\n            if (resp.message == 'MSG000047') {\n              this.router.navigate([LoginComponent.ROTA]);\n            }else {\n              this.setControlInvalid('email','MSG000071');\n            }\n          }\n          this.isLoader = false;\n        },\n        (erro: Erro) => {\n          this.isLoader = false;\n          this.messageService.create(erro.message);\n        },()=>{\n          this.isLoader = false;\n        }\n      );\n    }\n  }\n}\n","<!--begin::Forgot-->\n<div class=\"login-form login-signin\">\n    <div class=\"text-center mb-10 mb-lg-20\">\n        <h3 class=\"font-size-h1\">{{ \"MSG000007.descricao\" | translate }}</h3>\n        <p class=\"text-muted font-weight-bold\">{{ \"MSG000012.descricao\" | translate }}</p>\n    </div>\n    <!--begin::Form-->\n    <form class=\"form\" novalidate=\"novalidate\" id=\"kt_login_forgot_form\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n        <div class=\"form-group\">\n            <input [ngClass]=\"{'is-invalid': isControlInvalid('email')}\" class=\"form-control form-control-solid h-auto py-5 px-6\" type=\"email\" formControlName=\"email\"\n                [placeholder]=\"'MSG000003.descricao' | translate\" autocomplete=\"off\" />\n            <div *ngIf=\"isControlHasError('email', 'required')\" class=\"invalid-feedback\">\n                <p>{{ \"MSG000073.descricao\" | translate }}</p>\n            </div>\n            <div *ngIf=\"isControlHasError('email', 'email')\" class=\"invalid-feedback\">\n                <p>{{ \"MSG000005.descricao\" | translate }}</p>\n            </div>\n            <div *ngIf=\"isControlHasError('email', 'error')\" class=\"invalid-feedback\">\n                <p>{{msgsError['email']}}</p>\n            </div>\n        </div>\n        <div class=\"form-group d-flex flex-wrap flex-center\">\n            <!-- <button type=\"submit\" id=\"kt_login_signin_submit\" class=\"btn btn-primary font-weight-bold px-9 py-4 my-3\">{{ \"MSG000007.descricao\" | translate }}</button> -->\n            <button type=\"submit\" id=\"kt_login_signin_submit\" class=\"btn btn-primary font-weight-bold\" [ngClass]=\"{'spinner spinner-white spinner-right': isLoader }\">{{ \"MSG000007.descricao\" | translate }}</button>\n            <a href=\"javascript:;\" id=\"kt_login_forgot_cancel\" class=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\" routerLink=\"/auth/login\">{{ \"MSG000014.descricao\" | translate }}</a>\n        </div>\n    </form>\n    <!--end::Form-->\n</div>\n<!--end::Forgot-->","import { Component, OnInit } from '@angular/core';\nimport { FormBaseComponent } from 'src/app/core/components/form-base/form-base.component';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MessageService } from 'src/app/core/services/message.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AdminComponent } from 'src/app/pages/admin/admin.component';\n// import { UsuarioCadastrar } from '../../models/usuario-cadastrar.model';\nimport { confirmarSenhaValidator } from 'src/app/core/validators/confirmar-senha.validator';\nimport { LoginComponent } from '../login/login.component';\nimport { Erro } from 'src/app/core/models/erro.model';\nimport { Usuario, UsuarioAutenticado } from '../../models/usuario.model';\n\n@Component({\n  selector: 'app-registrar',\n  templateUrl: './registrar.component.html',\n  styleUrls: ['./registrar.component.css'],\n})\nexport class RegistrarComponent extends FormBaseComponent implements OnInit {\n  public static ROTA: string = '/auth/registrar';\n  public qtdCaracters = 6;\n  public isLoader:boolean=false;\n\n  constructor(\n    protected fb: FormBuilder,\n    protected translateService: TranslateService,\n    protected authService: AuthService,\n    protected router: Router,\n    protected activeRoute: ActivatedRoute,\n    protected messageService: MessageService,\n    protected modalService: NgbModal\n  ) {\n    super(fb, router, translateService, messageService, modalService);\n\n    if (this.authService.usuarioLogadoValue) {\n      this.router.navigate([AdminComponent.ROTA]);\n    }\n  }\n\n  ngOnInit() {\n    this.msgsError = [];\n\n    this.criarForm();\n  }\n\n  validar(): boolean {\n    var controls = this.form.controls;\n\n    if (this.form.invalid) {\n      Object.keys(controls).forEach((controlName) => {\n        controls[controlName].markAsTouched();\n      });\n\n      this.messageService.create('MSG000034');\n\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  criarForm() {\n    this.form = this.fb.group(\n      {\n        nome: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(100),\n          ]),\n        ],\n        email: [\n          '',\n          Validators.compose([Validators.required, Validators.email]),\n        ],\n        senha: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(this.qtdCaracters),\n            Validators.maxLength(this.qtdCaracters),\n          ]),\n        ],\n        confirmarSenha: [\n          '',\n          Validators.compose([\n            Validators.required,\n            Validators.minLength(this.qtdCaracters),\n            Validators.maxLength(this.qtdCaracters),\n          ]),\n        ],\n      },\n      { validator: [confirmarSenhaValidator] }\n    );\n  }\n\n  submit() {\n    if (this.validar()) {\n      \n      const dadosForm = this.form.value;\n\n      let usuario = new UsuarioAutenticado();\n      usuario.nome = dadosForm.nome;\n      usuario.email = dadosForm.email;\n      usuario.senha = dadosForm.senha;\n      usuario.confirmarSenha = dadosForm.confirmarSenha;\n\n      this.isLoader = true;\n      this.authService.registrar(usuario).subscribe(\n        (resp) => {\n          if (resp) {\n            if (resp.message == 'MSG000039') {\n              this.router.navigate([LoginComponent.ROTA]);\n              this.messageService.create(resp.message);\n            } else {\n              this.messageService.create(resp.message);\n              this.setControlInvalid('email', 'MSG000072');\n            }\n          }\n          this.isLoader = false;\n        },\n        (erro: Erro) => {\n          this.isLoader = false;\n          this.messageService.create(erro.message);\n        },()=>{\n          this.isLoader = false;\n        }\n      );\n    }\n  }\n}\n","<!--begin::Forgot-->\n<div class=\"login-form login-signin\">\n    <div class=\"text-center mb-10 mb-lg-20\">\n        <h3 class=\"font-size-h1\">{{ \"MSG000001.descricao\" | translate }}</h3>\n        <p class=\"text-muted font-weight-bold\">{{ \"MSG000015.descricao\" | translate }}</p>\n    </div>\n    <form class=\"form\" novalidate=\"novalidate\" id=\"kt_login_signin_form\" [formGroup]=\"form\" (ngSubmit)=\"submit()\"\n    (keydown.enter)=\"submit(); (false)\">\n    <div class=\"form-group\">\n        <input [ngClass]=\"{'is-invalid': isControlInvalid('nome')}\" class=\"form-control form-control-solid h-auto py-5 px-6\" type=\"email\" formControlName=\"nome\"\n            [placeholder]=\"'MSG000017.descricao' | translate\" autocomplete=\"off\" />\n        <div *ngIf=\"isControlHasError('nome', 'required')\" class=\"invalid-feedback\">\n            <p>{{ \"MSG000073.descricao\" | translate }}</p>\n        </div>\n        <div *ngIf=\"isControlHasError('nome', 'error')\" class=\"invalid-feedback\">\n            <p>{{msgsError['nome']}}</p>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <input [ngClass]=\"{'is-invalid': isControlInvalid('email')}\" class=\"form-control form-control-solid h-auto py-5 px-6\" type=\"email\" formControlName=\"email\"\n            [placeholder]=\"'MSG000003.descricao' | translate\" autocomplete=\"off\" />\n        <div *ngIf=\"isControlHasError('email', 'required')\" class=\"invalid-feedback\">\n            <p>{{ \"MSG000073.descricao\" | translate }}</p>\n        </div>\n        <div *ngIf=\"isControlHasError('email', 'email')\" class=\"invalid-feedback\">\n            <p>{{ \"MSG000005.descricao\" | translate }}</p>\n        </div>\n        <div *ngIf=\"isControlHasError('email', 'error')\" class=\"invalid-feedback\">\n            <p>{{msgsError['email']}}</p>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <input [ngClass]=\"{'is-invalid': isControlInvalid('senha')}\" class=\"form-control form-control-solid h-auto py-5 px-6\" type=\"password\" formControlName=\"senha\"\n            [placeholder]=\"'MSG000008.descricao' | translate\" autocomplete=\"off\" maxlength={{qtdCaracters}} />\n        <div *ngIf=\"isControlHasError('senha', 'required')\" class=\"invalid-feedback\">\n            <p>\n                {{\n                    \"MSG000073.descricao\" | translate: { value: \"strong\" }\n                  }}\n            </p>\n        </div>\n        <div *ngIf=\"\n                  isControlHasError('senha', 'minlength') ||\n                  isControlHasError('senha', 'maxlength')\n                \" class=\"invalid-feedback\">\n            <p>\n                {{\n                    \"MSG000010.descricao\"\n                      | translate: { value: qtdCaracters }\n                  }}\n            </p>\n        </div>\n        <div *ngIf=\"isControlHasError('senha', 'error')\" class=\"invalid-feedback\">\n            <p>{{msgsError['senha']}}</p>\n        </div>\n    </div>\n    <div class=\"form-group\">\n        <input [ngClass]=\"{'is-invalid': isControlInvalid('confirmarSenha')}\" class=\"form-control form-control-solid h-auto py-5 px-6\" type=\"password\" formControlName=\"confirmarSenha\"\n            [placeholder]=\"'MSG000019.descricao' | translate\" autocomplete=\"off\" maxlength={{qtdCaracters}} />\n        <div *ngIf=\"isControlHasError('confirmarSenha', 'required')\" class=\"invalid-feedback\">\n            <p>\n                {{\n                    \"MSG000073.descricao\" | translate: { value: \"strong\" }\n                  }}\n            </p>\n        </div>\n        <div *ngIf=\"\n                  isControlHasError('confirmarSenha', 'minlength') ||\n                  isControlHasError('confirmarSenha', 'maxlength')\n                \" class=\"invalid-feedback\">\n            <p>\n                {{\n                    \"MSG000021.descricao\"\n                      | translate: { value: qtdCaracters }\n                  }}\n            </p>\n        </div>\n        <div *ngIf=\"form.errors?.senhaMismatch\" class=\"invalid-feedback\">\n            <p>{{ \"MSG000022.descricao\" | translate }}</p>\n          </div>\n          <div *ngIf=\"isControlHasError('confirmarsenha', 'error')\" class=\"invalid-feedback\">\n            <p>{{msgsError['confirmarsenha']}}</p>\n        </div>\n    </div>\n        <!--begin::Action-->\n        <div class=\"form-group\">\n            <label class=\"checkbox mb-0\">\n            <input type=\"checkbox\" name=\"agree\" />{{ \"MSG000023.descricao\" | translate }}\n            <a href=\"#\">{{ \"MSG000024.descricao\" | translate }}</a>.\n            <span></span></label>\n        </div>\n        <div class=\"form-group d-flex flex-wrap flex-center\">\n            <!-- <button type=\"submit\" id=\"kt_login_signin_submit\" class=\"btn btn-primary font-weight-bold px-9 py-4 my-3\">{{ \"MSG000052.descricao\" | translate }}</button> -->\n            <button type=\"submit\" id=\"kt_login_signin_submit\" class=\"btn btn-primary font-weight-bold\" [ngClass]=\"{'spinner spinner-white spinner-right': isLoader }\">{{ \"MSG000052.descricao\" | translate }}</button>\n        <a href=\"javascript:;\" id=\"kt_login_forgot_cancel\" class=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\" routerLink=\"/auth/login\">{{ \"MSG000014.descricao\" | translate }}</a>\n        </div>\n        <!--end::Action-->\n    </form>\n    <!--end::Form-->\n</div>\n<!--end::Forgot-->"],"sourceRoot":"webpack:///"}