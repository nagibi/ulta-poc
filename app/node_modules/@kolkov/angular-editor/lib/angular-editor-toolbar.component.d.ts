import { ElementRef, EventEmitter, Renderer2 } from '@angular/core';
import { AngularEditorService } from './angular-editor.service';
import { CustomClass } from './config';
import { SelectOption } from './ae-select/ae-select.component';
import * as ɵngcc0 from '@angular/core';
export declare class AngularEditorToolbarComponent {
    private r;
    private editorService;
    private er;
    private doc;
    htmlMode: boolean;
    linkSelected: boolean;
    block: string;
    fontName: string;
    fontSize: string;
    foreColour: any;
    backColor: any;
    headings: SelectOption[];
    fontSizes: SelectOption[];
    customClassId: string;
    _customClasses: CustomClass[];
    customClassList: SelectOption[];
    tagMap: {
        BLOCKQUOTE: string;
        A: string;
    };
    select: string[];
    buttons: string[];
    id: string;
    uploadUrl: string;
    showToolbar: boolean;
    fonts: SelectOption[];
    customClasses: CustomClass[];
    defaultFontName: string;
    defaultFontSize: string;
    hiddenButtons: string[][];
    execute: EventEmitter<string>;
    myInputFile: ElementRef;
    readonly isLinkButtonDisabled: boolean;
    constructor(r: Renderer2, editorService: AngularEditorService, er: ElementRef, doc: any);
    /**
     * Trigger command from editor header buttons
     * @param command string from toolbar buttons
     */
    triggerCommand(command: string): void;
    /**
     * highlight editor buttons when cursor moved or positioning
     */
    triggerButtons(): void;
    /**
     * trigger highlight editor buttons when cursor moved or positioning in block
     */
    triggerBlocks(nodes: Node[]): void;
    /**
     * insert URL link
     */
    insertUrl(): void;
    /**
     * insert Video link
     */
    insertVideo(): void;
    /** insert color */
    insertColor(color: string, where: string): void;
    /**
     * set font Name/family
     * @param foreColor string
     */
    setFontName(foreColor: string): void;
    /**
     * set font Size
     * @param fontSize string
     */
    setFontSize(fontSize: string): void;
    /**
     * toggle editor mode (WYSIWYG or SOURCE)
     * @param m boolean
     */
    setEditorMode(m: boolean): void;
    /**
     * Upload image when file is selected
     */
    onFileChanged(event: any): void;
    /**
     * Set custom class
     */
    setCustomClass(classId: string): void;
    isButtonHidden(name: string): boolean;
    focus(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularEditorToolbarComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<AngularEditorToolbarComponent, "angular-editor-toolbar", never, { "fonts": "fonts"; "customClasses": "customClasses"; "defaultFontName": "defaultFontName"; "defaultFontSize": "defaultFontSize"; "id": "id"; "uploadUrl": "uploadUrl"; "showToolbar": "showToolbar"; "hiddenButtons": "hiddenButtons"; }, { "execute": "execute"; }, never, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1lZGl0b3ItdG9vbGJhci5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiYW5ndWxhci1lZGl0b3ItdG9vbGJhci5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVsZW1lbnRSZWYsIEV2ZW50RW1pdHRlciwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBbmd1bGFyRWRpdG9yU2VydmljZSB9IGZyb20gJy4vYW5ndWxhci1lZGl0b3Iuc2VydmljZSc7XG5pbXBvcnQgeyBDdXN0b21DbGFzcyB9IGZyb20gJy4vY29uZmlnJztcbmltcG9ydCB7IFNlbGVjdE9wdGlvbiB9IGZyb20gJy4vYWUtc2VsZWN0L2FlLXNlbGVjdC5jb21wb25lbnQnO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgQW5ndWxhckVkaXRvclRvb2xiYXJDb21wb25lbnQge1xuICAgIHByaXZhdGUgcjtcbiAgICBwcml2YXRlIGVkaXRvclNlcnZpY2U7XG4gICAgcHJpdmF0ZSBlcjtcbiAgICBwcml2YXRlIGRvYztcbiAgICBodG1sTW9kZTogYm9vbGVhbjtcbiAgICBsaW5rU2VsZWN0ZWQ6IGJvb2xlYW47XG4gICAgYmxvY2s6IHN0cmluZztcbiAgICBmb250TmFtZTogc3RyaW5nO1xuICAgIGZvbnRTaXplOiBzdHJpbmc7XG4gICAgZm9yZUNvbG91cjogYW55O1xuICAgIGJhY2tDb2xvcjogYW55O1xuICAgIGhlYWRpbmdzOiBTZWxlY3RPcHRpb25bXTtcbiAgICBmb250U2l6ZXM6IFNlbGVjdE9wdGlvbltdO1xuICAgIGN1c3RvbUNsYXNzSWQ6IHN0cmluZztcbiAgICBfY3VzdG9tQ2xhc3NlczogQ3VzdG9tQ2xhc3NbXTtcbiAgICBjdXN0b21DbGFzc0xpc3Q6IFNlbGVjdE9wdGlvbltdO1xuICAgIHRhZ01hcDoge1xuICAgICAgICBCTE9DS1FVT1RFOiBzdHJpbmc7XG4gICAgICAgIEE6IHN0cmluZztcbiAgICB9O1xuICAgIHNlbGVjdDogc3RyaW5nW107XG4gICAgYnV0dG9uczogc3RyaW5nW107XG4gICAgaWQ6IHN0cmluZztcbiAgICB1cGxvYWRVcmw6IHN0cmluZztcbiAgICBzaG93VG9vbGJhcjogYm9vbGVhbjtcbiAgICBmb250czogU2VsZWN0T3B0aW9uW107XG4gICAgY3VzdG9tQ2xhc3NlczogQ3VzdG9tQ2xhc3NbXTtcbiAgICBkZWZhdWx0Rm9udE5hbWU6IHN0cmluZztcbiAgICBkZWZhdWx0Rm9udFNpemU6IHN0cmluZztcbiAgICBoaWRkZW5CdXR0b25zOiBzdHJpbmdbXVtdO1xuICAgIGV4ZWN1dGU6IEV2ZW50RW1pdHRlcjxzdHJpbmc+O1xuICAgIG15SW5wdXRGaWxlOiBFbGVtZW50UmVmO1xuICAgIHJlYWRvbmx5IGlzTGlua0J1dHRvbkRpc2FibGVkOiBib29sZWFuO1xuICAgIGNvbnN0cnVjdG9yKHI6IFJlbmRlcmVyMiwgZWRpdG9yU2VydmljZTogQW5ndWxhckVkaXRvclNlcnZpY2UsIGVyOiBFbGVtZW50UmVmLCBkb2M6IGFueSk7XG4gICAgLyoqXG4gICAgICogVHJpZ2dlciBjb21tYW5kIGZyb20gZWRpdG9yIGhlYWRlciBidXR0b25zXG4gICAgICogQHBhcmFtIGNvbW1hbmQgc3RyaW5nIGZyb20gdG9vbGJhciBidXR0b25zXG4gICAgICovXG4gICAgdHJpZ2dlckNvbW1hbmQoY29tbWFuZDogc3RyaW5nKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBoaWdobGlnaHQgZWRpdG9yIGJ1dHRvbnMgd2hlbiBjdXJzb3IgbW92ZWQgb3IgcG9zaXRpb25pbmdcbiAgICAgKi9cbiAgICB0cmlnZ2VyQnV0dG9ucygpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIHRyaWdnZXIgaGlnaGxpZ2h0IGVkaXRvciBidXR0b25zIHdoZW4gY3Vyc29yIG1vdmVkIG9yIHBvc2l0aW9uaW5nIGluIGJsb2NrXG4gICAgICovXG4gICAgdHJpZ2dlckJsb2Nrcyhub2RlczogTm9kZVtdKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBpbnNlcnQgVVJMIGxpbmtcbiAgICAgKi9cbiAgICBpbnNlcnRVcmwoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBpbnNlcnQgVmlkZW8gbGlua1xuICAgICAqL1xuICAgIGluc2VydFZpZGVvKCk6IHZvaWQ7XG4gICAgLyoqIGluc2VydCBjb2xvciAqL1xuICAgIGluc2VydENvbG9yKGNvbG9yOiBzdHJpbmcsIHdoZXJlOiBzdHJpbmcpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIHNldCBmb250IE5hbWUvZmFtaWx5XG4gICAgICogQHBhcmFtIGZvcmVDb2xvciBzdHJpbmdcbiAgICAgKi9cbiAgICBzZXRGb250TmFtZShmb3JlQ29sb3I6IHN0cmluZyk6IHZvaWQ7XG4gICAgLyoqXG4gICAgICogc2V0IGZvbnQgU2l6ZVxuICAgICAqIEBwYXJhbSBmb250U2l6ZSBzdHJpbmdcbiAgICAgKi9cbiAgICBzZXRGb250U2l6ZShmb250U2l6ZTogc3RyaW5nKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiB0b2dnbGUgZWRpdG9yIG1vZGUgKFdZU0lXWUcgb3IgU09VUkNFKVxuICAgICAqIEBwYXJhbSBtIGJvb2xlYW5cbiAgICAgKi9cbiAgICBzZXRFZGl0b3JNb2RlKG06IGJvb2xlYW4pOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFVwbG9hZCBpbWFnZSB3aGVuIGZpbGUgaXMgc2VsZWN0ZWRcbiAgICAgKi9cbiAgICBvbkZpbGVDaGFuZ2VkKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIC8qKlxuICAgICAqIFNldCBjdXN0b20gY2xhc3NcbiAgICAgKi9cbiAgICBzZXRDdXN0b21DbGFzcyhjbGFzc0lkOiBzdHJpbmcpOiB2b2lkO1xuICAgIGlzQnV0dG9uSGlkZGVuKG5hbWU6IHN0cmluZyk6IGJvb2xlYW47XG4gICAgZm9jdXMoKTogdm9pZDtcbn1cbiJdfQ==