{"version":3,"file":"ngx-loading-bar-http-client.js","sources":["ng:/@ngx-loading-bar/http-client/loading-bar.interceptor.ts","ng:/@ngx-loading-bar/http-client/http.module.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,MAOa,qBAAqB;AAAG;AAAQ;AACnC;AAAQ,IAAhB,YAAoB,UAA6B;AAAI,QAAjC,eAAU,GAAV,UAAU,CAAmB;AAAC,KAAG;AACvD;AACO;AAAsB;AAAuB;AAAmB;AAAQ,IAA7E,SAAS,CAAC,GAAqB,EAAE,IAAiB;AAAI;AACzB,QAC3B,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,EAAE;AAC7C,YAAM,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,CAAC;AACzF,SAAK;AACL;AACwB,cAAd,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;AAC9B;AACwB,YAAhB,OAAO,GAAG,KAAK;AACvB;AAAyB,cAAf,iBAAiB,GAAG,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AACjD,QAAI,CAAC,CAAC,SAAS,GAAG,CAAC,GAAG,IAAI;AAC1B,YAAM,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;AAC9B,YAAM,OAAO,GAAG,IAAI,CAAC;AACrB,YAAM,OAAO,iBAAiB,CAAC,GAAG,IAAI,CAAC,CAAC;AACxC,SAAK,CAAC;AACN,QACI,OAAO,CAAC,CAAC,IAAI,CACX,QAAQ,CAAC,MAAM,OAAO,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,CACtD,CAAC;AACN,KAAG;AACH;iDAxBC,UAAU;+HACT;AAAC;AAAmB;AACjB,YARI,iBAAiB;AAAG;;;kFAAE;AAAC;AAAC;AAAI;AACzB;AACyD;ACFrE,MAkBa,0BAA0B;AAAG;sDAbzC,QAAQ,SAAC,kBACR,OAAO;CAAE,sBACP,gBAAgB,sBAChB,gBAAgB,mBACjB,kBACD,OAAO,EAAE,sBACP,gBAAgB;CAChB,gBAAgB,mBACjB,kBACD,SAAS,EAAE;CACT,EAAE,OAAO,EAAE;UAAiB,EAAE,QAAQ,EAAE;aAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;;MAC7E,eACF;;;;;;;;;;;;;;;;;;;;0BACI;AAAC;AAAC;AAAI;AACT;AAAqG;AAAI;AAAC;AAAI;AAAkC;AAAqG;AAAI;AAAC;;ADnvBA,AAAA,AANA,AAAA,ACAA,AAkBA,AAAA,AAbA,AAAA,AAAA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AACA,AAAA,AACA,AACA,AAAA,AAAA,AACA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AAAA,AACA,AACA","sourcesContent":["import { LoadingBarService } from '@ngx-loading-bar/core';\nimport { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpEventType } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class LoadingBarInterceptor implements HttpInterceptor {\n  constructor(private loadingBar: LoadingBarService) {}\n\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    // https://github.com/angular/angular/issues/18155\n    if (req.headers.has('ignoreLoadingBar')) {\n      return next.handle(req.clone({ headers: req.headers.delete('ignoreLoadingBar') }));\n    }\n\n    const r = next.handle(req);\n\n    let started = false;\n    const responseSubscribe = r.subscribe.bind(r);\n    r.subscribe = (...args) => {\n      this.loadingBar.start();\n      started = true;\n      return responseSubscribe(...args);\n    };\n\n    return r.pipe(\n      finalize(() => started && this.loadingBar.complete()),\n    );\n  }\n}\n","import { LoadingBarModule, LoadingBarService } from '@ngx-loading-bar/core';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoadingBarInterceptor } from './loading-bar.interceptor';\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n    LoadingBarModule,\n  ],\n  exports: [\n    HttpClientModule,\n    LoadingBarModule,\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingBarInterceptor, multi: true },\n  ],\n})\nexport class LoadingBarHttpClientModule {}\n"]}